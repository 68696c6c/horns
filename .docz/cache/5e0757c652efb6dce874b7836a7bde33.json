{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/components/charts/y-axis.jsx","dependencies":[{"path":"/site/src/components/charts/y-axis.jsx","mtime":1573330613000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIF9qc3hGaWxlTmFtZSA9ICIvc2l0ZS9zcmMvY29tcG9uZW50cy9jaGFydHMveS1heGlzLmpzeCI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmVudGVyTW9kdWxlOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7Cgp2YXIgX19zaWduYXR1cmVfXyA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbFsiZGVmYXVsdCJdLnNpZ25hdHVyZSA6IGZ1bmN0aW9uIChhKSB7CiAgcmV0dXJuIGE7Cn07CgppbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnOwppbXBvcnQgdXVpZCBmcm9tICd1dWlkL3Y0JzsKaW1wb3J0IHsgU1ZHTGluZSB9IGZyb20gJy4uL3N2Zyc7CmltcG9ydCB7IEFYSVNfTUFSS19XSURUSCB9IGZyb20gJy4vdXRpbHMnOwppbXBvcnQgQ2hhcnRMYWJlbCBmcm9tICcuL2NoYXJ0LWxhYmVsJzsKCnZhciBTY2FsZVkgPSBmdW5jdGlvbiBTY2FsZVkoX3JlZikgewogIHZhciB4ID0gX3JlZi54LAogICAgICB5ID0gX3JlZi55LAogICAgICBoZWlnaHQgPSBfcmVmLmhlaWdodCwKICAgICAgd2lkdGggPSBfcmVmLndpZHRoLAogICAgICBtYXJrcyA9IF9yZWYubWFya3M7CiAgdmFyIHkyID0geSArIGhlaWdodDsKICB2YXIgaGFsZiA9IEFYSVNfTUFSS19XSURUSCAvIDI7CiAgdmFyIHBTdGFydCA9IHggLSBoYWxmOwogIHZhciBwRW5kID0geCArIGhhbGY7CiAgdmFyIHBvaW50cyA9IG1hcmtzLm1hcChmdW5jdGlvbiAobVkpIHsKICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCB7CiAgICAgIGtleTogdXVpZCgpLAogICAgICBfX3NvdXJjZTogewogICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgbGluZU51bWJlcjogMTMKICAgICAgfSwKICAgICAgX19zZWxmOiB0aGlzCiAgICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KFNWR0xpbmUsIHsKICAgICAgY2xhc3NOYW1lOiAibWFyayIsCiAgICAgIHN0cm9rZTogImNvcHkiLAogICAgICBzdHJva2VXaWR0aDogMiwKICAgICAgeDE6IHBTdGFydCwKICAgICAgeTE6IG1ZLAogICAgICB4MjogcEVuZCwKICAgICAgeTI6IG1ZLAogICAgICBrZXk6IHV1aWQoKSwKICAgICAgX19zb3VyY2U6IHsKICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICAgIGxpbmVOdW1iZXI6IDE0CiAgICAgIH0sCiAgICAgIF9fc2VsZjogdGhpcwogICAgfSksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU1ZHTGluZSwgewogICAgICBjbGFzc05hbWU6ICJtYXJrIiwKICAgICAgc3Ryb2tlOiAibmV1dHJhbCIsCiAgICAgIHgxOiB4LAogICAgICB5MTogbVksCiAgICAgIHgyOiB3aWR0aCArIHgsCiAgICAgIHkyOiBtWSwKICAgICAga2V5OiB1dWlkKCksCiAgICAgIF9fc291cmNlOiB7CiAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgICBsaW5lTnVtYmVyOiAxNQogICAgICB9LAogICAgICBfX3NlbGY6IHRoaXMKICAgIH0pKTsKICB9KTsKICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCgiZyIsIHsKICAgIGNsYXNzTmFtZTogInktc2NhbGUiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMTkKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KFNWR0xpbmUsIHsKICAgIGNsYXNzTmFtZTogImF4aXMiLAogICAgc3Ryb2tlOiAiY29weSIsCiAgICBzdHJva2VXaWR0aDogMiwKICAgIHgxOiB4LAogICAgeTE6IHksCiAgICB4MjogeCwKICAgIHkyOiB5MiwKICAgIGtleTogdXVpZCgpLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMjAKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgcG9pbnRzKTsKfTsKCnZhciBBeGlzWSA9IGZ1bmN0aW9uIEF4aXNZKF9yZWYyKSB7CiAgdmFyIGxhYmVscyA9IF9yZWYyLmxhYmVscywKICAgICAgY2hhcnRQYWRkaW5nWCA9IF9yZWYyLmNoYXJ0UGFkZGluZ1gsCiAgICAgIGNoYXJ0UGFkZGluZ1kgPSBfcmVmMi5jaGFydFBhZGRpbmdZLAogICAgICBmb250U2l6ZSA9IF9yZWYyLmZvbnRTaXplLAogICAgICBoZWlnaHQgPSBfcmVmMi5oZWlnaHQsCiAgICAgIHdpZHRoID0gX3JlZjIud2lkdGg7CiAgdmFyIGluY3JlbWVudCA9IGhlaWdodCAvIChsYWJlbHMubGVuZ3RoIC0gMSk7CiAgdmFyIGxhYmVsT2Zmc2V0ID0gZm9udFNpemUgLyAyOwogIHZhciBtYXJrcyA9IFtdOwogIHZhciB5MiA9IGhlaWdodCArIGNoYXJ0UGFkZGluZ1k7CgogIGZvciAodmFyIGkgPSB5MjsgaSA+PSBjaGFydFBhZGRpbmdZOyBpIC09IGluY3JlbWVudCkgewogICAgbWFya3MucHVzaChpKTsKICB9CgogIHZhciBzY2FsZUxhYmVscyA9IGxhYmVscy5tYXAoZnVuY3Rpb24gKHRleHQsIGluZGV4KSB7CiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChDaGFydExhYmVsLCB7CiAgICAgIHg6IDAsCiAgICAgIHk6IG1hcmtzW2luZGV4XSAtIGxhYmVsT2Zmc2V0LAogICAgICB3aWR0aDogY2hhcnRQYWRkaW5nWCwKICAgICAgaGVpZ2h0OiBmb250U2l6ZSwKICAgICAgYWxpZ246ICJjZW50ZXIiLAogICAgICBrZXk6IHV1aWQoKSwKICAgICAgX19zb3VyY2U6IHsKICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICAgIGxpbmVOdW1iZXI6IDM1CiAgICAgIH0sCiAgICAgIF9fc2VsZjogdGhpcwogICAgfSwgdGV4dCk7CiAgfSk7CiAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImciLCB7CiAgICBjbGFzc05hbWU6ICJ5LWF4aXMiLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzgKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KFNjYWxlWSwgewogICAgeDogY2hhcnRQYWRkaW5nWCwKICAgIHk6IGNoYXJ0UGFkZGluZ1ksCiAgICBoZWlnaHQ6IGhlaWdodCwKICAgIHdpZHRoOiB3aWR0aCwKICAgIG1hcmtzOiBtYXJrcywKICAgIGtleTogdXVpZCgpLAogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzkKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgc2NhbGVMYWJlbHMpOwp9OwoKdmFyIF9kZWZhdWx0ID0gQXhpc1k7CmV4cG9ydCBkZWZhdWx0IF9kZWZhdWx0OwoKaWYgKHR5cGVvZiBBeGlzWSAhPT0gJ3VuZGVmaW5lZCcgJiYgQXhpc1kgJiYgQXhpc1kgPT09IE9iamVjdChBeGlzWSkgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShBeGlzWSkpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQXhpc1ksICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJBeGlzWSIsCiAgICAgIGZpbGVuYW1lOiAic3JjL2NvbXBvbmVudHMvY2hhcnRzL3ktYXhpcy5qc3giCiAgICB9CiAgfSk7Cn0KCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoU2NhbGVZLCAiU2NhbGVZIiwgIi9zaXRlL3NyYy9jb21wb25lbnRzL2NoYXJ0cy95LWF4aXMuanN4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoQXhpc1ksICJBeGlzWSIsICIvc2l0ZS9zcmMvY29tcG9uZW50cy9jaGFydHMveS1heGlzLmpzeCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKF9kZWZhdWx0LCAiZGVmYXVsdCIsICIvc2l0ZS9zcmMvY29tcG9uZW50cy9jaGFydHMveS1heGlzLmpzeCIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5sZWF2ZU1vZHVsZTsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/site/src/components/charts/y-axis.jsx"],"names":["React","uuid","SVGLine","AXIS_MARK_WIDTH","ChartLabel","ScaleY","x","y","height","width","marks","y2","half","pStart","pEnd","points","map","mY","AxisY","labels","chartPaddingX","chartPaddingY","fontSize","increment","length","labelOffset","i","push","scaleLabels","text","index"],"mappings":"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","sourcesContent":["import React from 'react'\nimport uuid from 'uuid/v4'\nimport { SVGLine } from '../svg'\nimport { AXIS_MARK_WIDTH } from './utils'\nimport ChartLabel from './chart-label'\n\nconst ScaleY = ({ x, y, height, width, marks }) => {\n  const y2 = y + height\n  const half = AXIS_MARK_WIDTH / 2\n  const pStart = x - half\n  const pEnd = x + half\n  const points = marks.map(mY => (\n    <React.Fragment key={uuid()}>\n      <SVGLine className=\"mark\" stroke=\"copy\" strokeWidth={2} x1={pStart} y1={mY} x2={pEnd} y2={mY} key={uuid()}/>\n      <SVGLine className=\"mark\" stroke=\"neutral\" x1={x} y1={mY} x2={width + x} y2={mY} key={uuid()}/>\n    </React.Fragment>\n  ))\n  return (\n    <g className=\"y-scale\">\n      <SVGLine className=\"axis\" stroke=\"copy\" strokeWidth={2} x1={x} y1={y} x2={x} y2={y2} key={uuid()} />\n      {points}\n    </g>\n  )\n}\n\nconst AxisY = ({ labels, chartPaddingX, chartPaddingY, fontSize, height, width }) => {\n  const increment = height / (labels.length - 1)\n  const labelOffset = fontSize / 2\n  let marks = []\n  const y2 = height + chartPaddingY\n  for (let i = y2; i >= chartPaddingY; i -= increment) {\n    marks.push(i)\n  }\n  const scaleLabels = labels.map((text, index) => {\n    return <ChartLabel x={0} y={marks[index] - labelOffset} width={chartPaddingX} height={fontSize} align=\"center\" key={uuid()}>{text}</ChartLabel>\n  })\n  return (\n    <g className=\"y-axis\">\n      <ScaleY x={chartPaddingX} y={chartPaddingY} height={height} width={width} marks={marks} key={uuid()} />\n      {scaleLabels}\n    </g>\n  )\n}\n\nexport default AxisY\n"]}]}