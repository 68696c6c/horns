{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/config/colors.js","dependencies":[{"path":"/site/src/config/colors.js","mtime":1573330658000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/site/src/config/colors.js"],"names":["ColorFactors","ColorPallet","palletColors","safeGetValue","MODE_LIGHT","MODE_DARK","MODE_DEFAULT","defaultColors","mode","hover","active","disabled","getColorValue","c","rgb","string","getSwatchPath","colorSwatch","parts","split","length","color","shade","swatch","getColorSwatch","swatches","path","getColorShade","getModeColors","dark","neutral","light","darkBase","base","lightBase","lightDark","lightDarker","background","primary","secondary","tertiary","lighter","inactive","copy","darkLight","darkLighter","darker","getColorSwatches","colorShades","copyLight","copyDark","Object","keys","forEach","colorShade","shadeColor","negative","negate","readable","isDark","negativeReadable","getShadedColorPallet","pallet","factors","shades","palletColor","alpha","darken","lighten","ColorsConfig","config","configPallet","configFactors","shaded","console","log","swatchKey","shadeKey"],"mappings":"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","sourcesContent":["import ColorFactors from './color-factors'\nimport ColorPallet, { palletColors } from './color-pallet'\nimport { safeGetValue } from './utils'\n\nconst MODE_LIGHT = 'light'\nconst MODE_DARK = 'dark'\nconst MODE_DEFAULT = MODE_DARK\n\n// @TODO get default values from a config file.\nconst defaultColors = {\n  mode: MODE_DEFAULT,\n  hover: 'primary',\n  active: 'secondary',\n  disabled: 'neutral',\n}\n\nconst getColorValue = c => c.rgb().string()\n\nconst getSwatchPath = colorSwatch => {\n  const parts = colorSwatch.split('-')\n  switch (parts.length) {\n    case 1:\n      return {\n        color: parts[0],\n        shade: 'base',\n        swatch: 'base',\n      }\n    case 2:\n      return {\n        color: parts[0],\n        shade: parts[1],\n        swatch: 'base',\n      }\n    default:\n      return {\n        color: parts[0],\n        shade: parts[1],\n        swatch: parts[2],\n      }\n  }\n}\n\nconst getColorSwatch = (swatches, swatch) => {\n  if (swatch === 'inherit') {\n    return 'inherit'\n  }\n  const path = getSwatchPath(swatch)\n  return swatches[path.color][path.shade][path.swatch]\n}\n\nconst getColorShade = (swatches, shade) => {\n  if (shade === '') {\n    return 'inherit'\n  }\n  const path = getSwatchPath(shade)\n  return swatches[path.color][path.shade]\n}\n\nconst getModeColors = (mode, dark, neutral, light) => {\n  const darkBase = getColorValue(dark.base)\n  const lightBase = getColorValue(light.base)\n\n  if (mode === MODE_LIGHT) {\n    const lightDark = getColorValue(dark.base)\n    const lightDarker = getColorValue(dark.base)\n    return {\n      background: {\n        primary: lightBase,\n        secondary: lightDark,\n        tertiary: lightDarker,\n        active: getColorValue(neutral.lighter),\n        inactive: getColorValue(neutral.light),\n      },\n      copy: {\n        primary: darkBase,\n        dark: darkBase,\n        light: lightBase,\n      },\n    }\n  }\n\n  const darkLight = getColorValue(dark.base)\n  const darkLighter = getColorValue(dark.base)\n  return {\n    background: {\n      primary: darkBase,\n      secondary: darkLight,\n      tertiary: darkLighter,\n      active: getColorValue(neutral.darker),\n      inactive: getColorValue(neutral.dark),\n    },\n    copy: {\n      primary: lightBase,\n      dark: darkBase,\n      light: lightBase,\n    },\n  }\n}\n\nconst getColorSwatches = (colorShades, copy) => {\n  const copyLight = copy.light\n  const copyDark = copy.dark\n  const swatches = {}\n  Object.keys(colorShades).forEach(colorShade => {\n    const shadeColor = colorShades[colorShade]\n    swatches[colorShade] = {}\n    Object.keys(shadeColor).forEach(shade => {\n      const color = shadeColor[shade]\n      const negative = color.negate()\n\n      swatches[colorShade][shade] = {\n        base: getColorValue(color),\n        readable: color.isDark() ? copyLight : copyDark,\n        negative: getColorValue(negative),\n        negativeReadable: negative.isDark() ? copyLight : copyDark,\n      }\n    })\n  })\n  return swatches\n}\n\nconst getShadedColorPallet = (pallet, factors) => {\n  const shades = {}\n  palletColors.forEach(palletColor => {\n    const color = pallet[palletColor]\n    if (palletColor === 'dark') {\n      shades[palletColor] = {\n        alpha: color.alpha(factors.alpha),\n        darker: color.darken(factors.darker),\n        dark: color.darken(factors.dark),\n        base: color,\n        light: color.lighten(25),\n        lighter: color.lighten(50),\n      }\n    } else if (palletColor === 'light') {\n      shades[palletColor] = {\n        alpha: color.alpha(factors.alpha),\n        darker: color.darken(0.15),\n        dark: color.darken(0.08),\n        base: color,\n        light: color.lighten(factors.light),\n        lighter: color.lighten(factors.lighter),\n      }\n    } else {\n      shades[palletColor] = {\n        alpha: color.alpha(factors.alpha),\n        darker: color.darken(factors.darker),\n        dark: color.darken(factors.dark),\n        base: color,\n        light: color.lighten(factors.light),\n        lighter: color.lighten(factors.lighter),\n      }\n    }\n  })\n  return shades\n}\n\nclass ColorsConfig {\n  constructor(config = {}) {\n    this.mode = safeGetValue(config, 'mode', defaultColors.mode)\n    const hover = safeGetValue(config, 'hover', defaultColors.hover)\n    const active = safeGetValue(config, 'active', defaultColors.active)\n    const disabled = safeGetValue(config, 'disabled', defaultColors.disabled)\n\n    const configPallet = safeGetValue(config, 'pallet', {})\n    const pallet = new ColorPallet(configPallet)\n\n    const configFactors = safeGetValue(config, 'factors', {})\n    const factors = new ColorFactors(configFactors)\n\n    const shaded = getShadedColorPallet(pallet, factors)\n    const { background, copy } = getModeColors(this.mode, shaded.dark, shaded.neutral, shaded.light)\n\n    this.swatches = getColorSwatches(shaded, copy)\n    this.background = background\n    this.copy = copy\n    this.hover = getColorSwatch(this.swatches, hover)\n    this.active = getColorSwatch(this.swatches, active)\n    this.disabled = getColorSwatch(this.swatches, disabled)\n\n    console.log('ColorsConfig', this)\n  }\n\n  darkMode() {\n    return this.mode === MODE_DARK\n  }\n\n  lightMode() {\n    return this.mode === MODE_LIGHT\n  }\n\n  getSwatch(swatchKey) {\n    return getColorSwatch(this.swatches, swatchKey)\n  }\n\n  getShade(shadeKey) {\n    return getColorShade(this.swatches, shadeKey)\n  }\n}\n\nexport default ColorsConfig\n"]}]}