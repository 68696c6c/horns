{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/components/forms/group-inline.jsx","dependencies":[{"path":"/site/src/components/forms/group-inline.jsx","mtime":1573330658000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/site/src/components/forms/group-inline.jsx"],"names":["React","PropTypes","uuid","styled","jsx","valueToInt","Label","isArray","isUndefined","StyledFormGroupHeading","end","theme","typography","fonts","bold","weight","spacing","tiny","FormGroupHeading","text","propTypes","string","isRequired","number","defaultProps","StyledGroupField","breakpoint","breakpoints","StyledToggleContainer","StyledButtonContainer","sizes","lineHeight","StyledGroupInline","small","isComponentType","component","type","displayName","name","props","mdxType","GroupInline","keys","children","filter","c","map","heading","className","others","length","child","index","result","Component"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport uuid from 'uuid/v4'\nimport styled from '@emotion/styled'\nimport { jsx } from '@emotion/core'\nimport { valueToInt } from '../../themes'\nimport Label from './label'\nimport { isArray, isUndefined } from '../../utils/utils'\n\nconst StyledFormGroupHeading = styled(Label)`\n  grid-column-end: span ${({ end }) => end};\n  font-weight: ${({ theme }) => theme.typography.fonts.bold.weight};\n  margin-top: ${({ theme }) => theme.spacing.tiny};\n  margin-bottom: ${({ theme }) => theme.spacing.tiny};\n  grid-row: 1;\n`\n\nconst FormGroupHeading = ({ text, end }) => (\n  <StyledFormGroupHeading end={end} className=\"group-heading\">{text}</StyledFormGroupHeading>\n)\n\nFormGroupHeading.propTypes = {\n  text: PropTypes.string.isRequired,\n  end: PropTypes.number,\n}\n\nFormGroupHeading.defaultProps = {\n  end: 1,\n}\n\nconst StyledGroupField = styled('div')`\n  grid-row: 2;\n  input:not([type='checkbox']):not([type='radio']):not([type='submit']),\n  textarea {\n    width: 100%;\n  }\n  label {\n    margin-top: 0;\n  }\n  @media(min-width: ${({ theme, breakpoint }) => theme.breakpoints[breakpoint]}) {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    input:not([type='checkbox']):not([type='radio']):not([type='submit']),\n    textarea,\n    .select-custom-container {\n      margin-bottom: 0;\n    }\n  }\n`\n\nconst StyledToggleContainer = styled('div')`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  margin-top: ${({ theme }) => theme.spacing.tiny};\n`\n\nconst StyledButtonContainer = styled('div')`\n  height: 100%;\n  display: flex;\n  align-items: flex-start;\n  margin-top: ${({ theme }) =>\n    valueToInt(theme.typography.sizes.default) *\n    valueToInt(theme.typography.lineHeight)}px;\n`\n\nconst StyledGroupInline = styled('div')`\n  margin-top: ${({ theme }) => theme.spacing.small};\n  @media(min-width: ${({ theme, breakpoint }) => theme.breakpoints[breakpoint]}) {\n    display: grid;\n    grid-auto-columns: 1fr;\n    column-gap: ${({ theme }) => theme.spacing.small};\n  }\n`\n\nconst isComponentType = (component, type) =>\n  component.type.displayName === type ||\n  component.type.name === type ||\n  component.props.mdxType === type\n\nclass GroupInline extends React.Component {\n  constructor(props) {\n    super(props)\n    this.keys = (isArray(props.children) ? props.children : [props.children])\n      .filter(c => !isUndefined(c.type))\n      .map(() => {\n        return uuid()\n      })\n  }\n\n  render() {\n    const { heading, breakpoint, className, children, ...others } = this.props\n    return (\n      <StyledGroupInline\n        breakpoint={breakpoint}\n        className={`${className} inline-group`}\n        {...others}\n      >\n        {heading && (\n          <FormGroupHeading\n            text={heading}\n            end={(isArray(children) ? children : [children]).length}\n          />\n        )}\n        {(isArray(children) ? children : [children])\n          .filter(c => !isUndefined(c.type))\n          .map((child, index) => {\n            let result = (\n              <StyledGroupField breakpoint={breakpoint} key={this.keys[index]}>\n                {child}\n              </StyledGroupField>\n            )\n            if (\n              isComponentType(child, 'Checkbox') ||\n              isComponentType(child, 'Radio')\n            ) {\n              result = (\n                <StyledGroupField breakpoint={breakpoint} key={this.keys[index]}>\n                  <StyledToggleContainer>{child}</StyledToggleContainer>\n                </StyledGroupField>\n              )\n            } else if (isComponentType(child, 'Button')) {\n              result = (\n                <StyledGroupField breakpoint={breakpoint} key={this.keys[index]}>\n                  <StyledButtonContainer>{child}</StyledButtonContainer>\n                </StyledGroupField>\n              )\n            }\n            return result\n          })}\n      </StyledGroupInline>\n    )\n  }\n}\n\nGroupInline.propTypes = {\n  heading: PropTypes.string,\n  breakpoint: PropTypes.string,\n  className: PropTypes.string,\n}\n\nGroupInline.defaultProps = {\n  heading: '',\n  breakpoint: 'medium',\n  className: '',\n}\n\nexport default GroupInline\n"]}]}