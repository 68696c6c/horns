{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/components/layout/grid/styles.js","dependencies":[{"path":"/site/src/components/layout/grid/styles.js","mtime":1573330658000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwgZnJvbSAiL3NpdGUvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmVudGVyTW9kdWxlOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q1KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6ICIsICIpIHtcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgZ3JpZC1nYXA6IDA7XG4gICAgICAgIGdyaWQtdGVtcGxhdGU6ICdsZWZ0IHJpZ2h0JyAvICIsICI7XG4gICAgICB9XG4gICAgICBAbWVkaWEgKG1heC13aWR0aDogIiwgIikge1xuICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICBncmlkLWdhcDogMDtcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZTogJ2xlZnQgcmlnaHQnIC8gMWZyIDJmcn07XG4gICAgICB9XG4gICAgIl0pOwoKICBfdGVtcGxhdGVPYmplY3Q1ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NSgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q0KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6ICIsICIpIHtcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgZ3JpZC1nYXA6IDA7XG4gICAgICAgIGdyaWQtdGVtcGxhdGU6ICciLCAiJyAvIDFmciAxZnI7XG4gICAgICB9XG4gICAgIl0pOwoKICBfdGVtcGxhdGVPYmplY3Q0ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QzKCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICAgICAgQG1lZGlhIChtaW4td2lkdGg6ICIsICIpIHtcbiAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgZ3JpZC1nYXA6ICIsICI7XG4gICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogIiwgIjtcbiAgICAgIH1cbiAgICAiXSk7CgogIF90ZW1wbGF0ZU9iamVjdDMgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QzKCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDIoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gICAgIiwgIjtcbiAgIl0pOwoKICBfdGVtcGxhdGVPYmplY3QyID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MigpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gICAgd2lkdGg6ICIsICI7XG4gICAgbWFyZ2luOiAiLCAiIGF1dG87XG4gICAgcGFkZGluZzogIiwgIjtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0KCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsWyJkZWZhdWx0Il0uc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJzsKaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7CmltcG9ydCB7IENvbG9yd2F5LCBDb250YWluZXIsIENvbnRhaW5lclNwbGl0IH0gZnJvbSAnLi4vLi4vLi4vdXRpbHMnOwpleHBvcnQgdmFyIENvbnRhaW5lckd1aWRlID0gc3R5bGVkLmRpdihDb2xvcndheSwgZnVuY3Rpb24gKF9yZWYpIHsKICB2YXIgdGhlbWUgPSBfcmVmLnRoZW1lOwogIHJldHVybiBjc3MoX3RlbXBsYXRlT2JqZWN0KCksIHRoZW1lLmdyaWQuZ2V0Q29udGFpbmVyKCksIHRoZW1lLnNwYWNpbmcuZ2V0U3BhY2luZygnc21hbGwnKSwgdGhlbWUuc3BhY2luZy5nZXRTcGFjaW5nKCdtZWRpdW0nKSk7Cn0pOwoKaWYgKHR5cGVvZiBDb250YWluZXJHdWlkZSAhPT0gJ3VuZGVmaW5lZCcgJiYgQ29udGFpbmVyR3VpZGUgJiYgQ29udGFpbmVyR3VpZGUgPT09IE9iamVjdChDb250YWluZXJHdWlkZSkgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShDb250YWluZXJHdWlkZSkpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQ29udGFpbmVyR3VpZGUsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJDb250YWluZXJHdWlkZSIsCiAgICAgIGZpbGVuYW1lOiAic3JjL2NvbXBvbmVudHMvbGF5b3V0L2dyaWQvc3R5bGVzLmpzIgogICAgfQogIH0pOwp9CgpleHBvcnQgdmFyIEFyZWEgPSBzdHlsZWQuZGl2KENvbG9yd2F5LCBmdW5jdGlvbiAoX3JlZjIpIHsKICB2YXIgYXJlYSA9IF9yZWYyLmFyZWE7CiAgcmV0dXJuIGNzcyhfdGVtcGxhdGVPYmplY3QyKCksIGFyZWEgJiYgImdyaWQtYXJlYTogIi5jb25jYXQoYXJlYSkpOwp9KTsKCmlmICh0eXBlb2YgQXJlYSAhPT0gJ3VuZGVmaW5lZCcgJiYgQXJlYSAmJiBBcmVhID09PSBPYmplY3QoQXJlYSkgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShBcmVhKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBcmVhLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiQXJlYSIsCiAgICAgIGZpbGVuYW1lOiAic3JjL2NvbXBvbmVudHMvbGF5b3V0L2dyaWQvc3R5bGVzLmpzIgogICAgfQogIH0pOwp9CgpleHBvcnQgdmFyIENvbHVtbnMgPSBzdHlsZWQuZGl2KENvbG9yd2F5LCBmdW5jdGlvbiAoX3JlZjMpIHsKICB2YXIgdGhlbWUgPSBfcmVmMy50aGVtZSwKICAgICAgY29sdW1ucyA9IF9yZWYzLmNvbHVtbnMsCiAgICAgIGJyZWFrcG9pbnQgPSBfcmVmMy5icmVha3BvaW50OwogIHZhciBtaW5XaWR0aCA9IHRoZW1lLmdyaWQuZ2V0QnJlYWtwb2ludChicmVha3BvaW50KTsKICB2YXIgdGVtcGxhdGUgPSAicmVwZWF0KCIuY29uY2F0KGNvbHVtbnMsICIsIDFmcikiKTsKCiAgaWYgKGNvbHVtbnMgPT09IDApIHsKICAgIHRlbXBsYXRlID0gInJlcGVhdChhdXRvLWZpdCwgbWlubWF4KCIuY29uY2F0KHRoZW1lLmdyaWQuY29sdW1uTWluLCAiLCAxZnIpKSIpOwogIH0KCiAgcmV0dXJuIGNzcyhfdGVtcGxhdGVPYmplY3QzKCksIG1pbldpZHRoLCB0aGVtZS5ncmlkLmdhcCwgdGVtcGxhdGUpOwp9KTsKCmlmICh0eXBlb2YgQ29sdW1ucyAhPT0gJ3VuZGVmaW5lZCcgJiYgQ29sdW1ucyAmJiBDb2x1bW5zID09PSBPYmplY3QoQ29sdW1ucykgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShDb2x1bW5zKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDb2x1bW5zLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiQ29sdW1ucyIsCiAgICAgIGZpbGVuYW1lOiAic3JjL2NvbXBvbmVudHMvbGF5b3V0L2dyaWQvc3R5bGVzLmpzIgogICAgfQogIH0pOwp9CgpleHBvcnQgdmFyIEhhbHZlcyA9IHN0eWxlZC5kaXYoQ29udGFpbmVyU3BsaXQsIENvbG9yd2F5LCBmdW5jdGlvbiAoX3JlZjQpIHsKICB2YXIgdGhlbWUgPSBfcmVmNC50aGVtZSwKICAgICAgYnJlYWtwb2ludCA9IF9yZWY0LmJyZWFrcG9pbnQsCiAgICAgIHJldmVyc2VkID0gX3JlZjQucmV2ZXJzZWQ7CiAgdmFyIG1pbldpZHRoID0gdGhlbWUuZ3JpZC5nZXRCcmVha3BvaW50KGJyZWFrcG9pbnQpOwogIHZhciBhcmVhcyA9IFsnbGVmdCcsICdyaWdodCddOwoKICBpZiAocmV2ZXJzZWQpIHsKICAgIGFyZWFzID0gYXJlYXMucmV2ZXJzZSgpOwogIH0KCiAgcmV0dXJuIGNzcyhfdGVtcGxhdGVPYmplY3Q0KCksIG1pbldpZHRoLCBhcmVhcy5qb2luKCcgJykpOwp9KTsKCmlmICh0eXBlb2YgSGFsdmVzICE9PSAndW5kZWZpbmVkJyAmJiBIYWx2ZXMgJiYgSGFsdmVzID09PSBPYmplY3QoSGFsdmVzKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKEhhbHZlcykpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoSGFsdmVzLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiSGFsdmVzIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvY29tcG9uZW50cy9sYXlvdXQvZ3JpZC9zdHlsZXMuanMiCiAgICB9CiAgfSk7Cn0KCmV4cG9ydCB2YXIgVGhpcmRzID0gc3R5bGVkLmRpdihDb250YWluZXJTcGxpdCwgQ29sb3J3YXksIGZ1bmN0aW9uIChfcmVmNSkgewogIHZhciB0aGVtZSA9IF9yZWY1LnRoZW1lLAogICAgICBicmVha3BvaW50ID0gX3JlZjUuYnJlYWtwb2ludDsKICB2YXIgY29udGFpbmVyID0gdGhlbWUuZ3JpZC5nZXRDb250YWluZXIoKTsKICB2YXIgbWluV2lkdGggPSB0aGVtZS5ncmlkLmdldEJyZWFrcG9pbnQoYnJlYWtwb2ludCk7CiAgdmFyIGd1dHRlciA9ICIoKDEwMHZ3IC0gIi5jb25jYXQoY29udGFpbmVyLCAiKSAvIDIpIik7CiAgdmFyIGZyYWN0aW9ucyA9IFsiY2FsYygoIi5jb25jYXQoY29udGFpbmVyLCAiIC8gMykgKyAiKS5jb25jYXQoZ3V0dGVyLCAiKSIpLCAiY2FsYygoKCIuY29uY2F0KGNvbnRhaW5lciwgIiAvIDMpICogMikgKyAiKS5jb25jYXQoZ3V0dGVyLCAiKSIpXTsKICByZXR1cm4gY3NzKF90ZW1wbGF0ZU9iamVjdDUoKSwgbWluV2lkdGgsIGZyYWN0aW9ucy5qb2luKCcgJyksIGNvbnRhaW5lcik7Cn0pOwoKaWYgKHR5cGVvZiBUaGlyZHMgIT09ICd1bmRlZmluZWQnICYmIFRoaXJkcyAmJiBUaGlyZHMgPT09IE9iamVjdChUaGlyZHMpICYmIE9iamVjdC5pc0V4dGVuc2libGUoVGhpcmRzKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShUaGlyZHMsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJUaGlyZHMiLAogICAgICBmaWxlbmFtZTogInNyYy9jb21wb25lbnRzL2xheW91dC9ncmlkL3N0eWxlcy5qcyIKICAgIH0KICB9KTsKfQoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5kZWZhdWx0OwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihDb250YWluZXJHdWlkZSwgIkNvbnRhaW5lckd1aWRlIiwgIi9zaXRlL3NyYy9jb21wb25lbnRzL2xheW91dC9ncmlkL3N0eWxlcy5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKEFyZWEsICJBcmVhIiwgIi9zaXRlL3NyYy9jb21wb25lbnRzL2xheW91dC9ncmlkL3N0eWxlcy5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKENvbHVtbnMsICJDb2x1bW5zIiwgIi9zaXRlL3NyYy9jb21wb25lbnRzL2xheW91dC9ncmlkL3N0eWxlcy5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKEhhbHZlcywgIkhhbHZlcyIsICIvc2l0ZS9zcmMvY29tcG9uZW50cy9sYXlvdXQvZ3JpZC9zdHlsZXMuanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihUaGlyZHMsICJUaGlyZHMiLCAiL3NpdGUvc3JjL2NvbXBvbmVudHMvbGF5b3V0L2dyaWQvc3R5bGVzLmpzIik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmxlYXZlTW9kdWxlOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["/site/src/components/layout/grid/styles.js"],"names":["styled","css","Colorway","Container","ContainerSplit","ContainerGuide","div","theme","grid","getContainer","spacing","getSpacing","Area","area","Columns","columns","breakpoint","minWidth","getBreakpoint","template","columnMin","gap","Halves","reversed","areas","reverse","join","Thirds","container","gutter","fractions"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,SAASC,GAAT,QAAoB,eAApB;AAEA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,cAA9B,QAAoD,gBAApD;AAEA,OAAO,IAAMC,cAAc,GAAGL,MAAM,CAACM,GAAP,CAC5BJ,QAD4B,EAE5B;AAAA,MAAGK,KAAH,QAAGA,KAAH;AAAA,SAAeN,GAAf,oBACWM,KAAK,CAACC,IAAN,CAAWC,YAAX,EADX,EAEYF,KAAK,CAACG,OAAN,CAAcC,UAAd,CAAyB,OAAzB,CAFZ,EAGaJ,KAAK,CAACG,OAAN,CAAcC,UAAd,CAAyB,QAAzB,CAHb;AAAA,CAF4B,CAAvB;;;;;;;;;;;;;AAUP,OAAO,IAAMC,IAAI,GAAGZ,MAAM,CAACM,GAAP,CAClBJ,QADkB,EAElB;AAAA,MAAGW,IAAH,SAAGA,IAAH;AAAA,SAAcZ,GAAd,qBACIY,IAAI,yBAAkBA,IAAlB,CADR;AAAA,CAFkB,CAAb;;;;;;;;;;;;;AAOP,OAAO,IAAMC,OAAO,GAAGd,MAAM,CAACM,GAAP,CACrBJ,QADqB,EAErB,iBAAoC;AAAA,MAAjCK,KAAiC,SAAjCA,KAAiC;AAAA,MAA1BQ,OAA0B,SAA1BA,OAA0B;AAAA,MAAjBC,UAAiB,SAAjBA,UAAiB;AAClC,MAAMC,QAAQ,GAAGV,KAAK,CAACC,IAAN,CAAWU,aAAX,CAAyBF,UAAzB,CAAjB;AACA,MAAIG,QAAQ,oBAAaJ,OAAb,WAAZ;;AACA,MAAIA,OAAO,KAAK,CAAhB,EAAmB;AACjBI,IAAAA,QAAQ,qCAA8BZ,KAAK,CAACC,IAAN,CAAWY,SAAzC,YAAR;AACD;;AACD,SAAOnB,GAAP,qBACuBgB,QADvB,EAGgBV,KAAK,CAACC,IAAN,CAAWa,GAH3B,EAI6BF,QAJ7B;AAOD,CAfoB,CAAhB;;;;;;;;;;;;;AAkBP,OAAO,IAAMG,MAAM,GAAGtB,MAAM,CAACM,GAAP,CACpBF,cADoB,EAEpBF,QAFoB,EAGpB,iBAAqC;AAAA,MAAlCK,KAAkC,SAAlCA,KAAkC;AAAA,MAA3BS,UAA2B,SAA3BA,UAA2B;AAAA,MAAfO,QAAe,SAAfA,QAAe;AACnC,MAAMN,QAAQ,GAAGV,KAAK,CAACC,IAAN,CAAWU,aAAX,CAAyBF,UAAzB,CAAjB;AACA,MAAIQ,KAAK,GAAG,CAAC,MAAD,EAAS,OAAT,CAAZ;;AACA,MAAID,QAAJ,EAAc;AACZC,IAAAA,KAAK,GAAGA,KAAK,CAACC,OAAN,EAAR;AACD;;AACD,SAAOxB,GAAP,qBACuBgB,QADvB,EAIsBO,KAAK,CAACE,IAAN,CAAW,GAAX,CAJtB;AAOD,CAhBmB,CAAf;;;;;;;;;;;;;AAmBP,OAAO,IAAMC,MAAM,GAAG3B,MAAM,CAACM,GAAP,CACpBF,cADoB,EAEpBF,QAFoB,EAGpB,iBAA2B;AAAA,MAAxBK,KAAwB,SAAxBA,KAAwB;AAAA,MAAjBS,UAAiB,SAAjBA,UAAiB;AACzB,MAAMY,SAAS,GAAGrB,KAAK,CAACC,IAAN,CAAWC,YAAX,EAAlB;AACA,MAAMQ,QAAQ,GAAGV,KAAK,CAACC,IAAN,CAAWU,aAAX,CAAyBF,UAAzB,CAAjB;AACA,MAAMa,MAAM,uBAAgBD,SAAhB,WAAZ;AACA,MAAME,SAAS,GAAG,iBACPF,SADO,qBACaC,MADb,yBAEND,SAFM,0BAEmBC,MAFnB,OAAlB;AAIA,SAAO5B,GAAP,qBACuBgB,QADvB,EAIoCa,SAAS,CAACJ,IAAV,CAAe,GAAf,CAJpC,EAMuBE,SANvB;AAYD,CAvBmB,CAAf;;;;;;;;;;;;;;;;;;;;;;0BAtDMvB,c;0BAUAO,I;0BAOAE,O;0BAkBAQ,M;0BAmBAK,M","sourcesContent":["import styled from '@emotion/styled'\nimport { css } from '@emotion/core'\n\nimport { Colorway, Container, ContainerSplit } from '../../../utils'\n\nexport const ContainerGuide = styled.div(\n  Colorway,\n  ({ theme }) => css`\n    width: ${theme.grid.getContainer()};\n    margin: ${theme.spacing.getSpacing('small')} auto;\n    padding: ${theme.spacing.getSpacing('medium')};\n    text-align: center;\n  `\n)\n\nexport const Area = styled.div(\n  Colorway,\n  ({ area }) => css`\n    ${area && `grid-area: ${area}`};\n  `\n)\n\nexport const Columns = styled.div(\n  Colorway,\n  ({ theme, columns, breakpoint }) => {\n    const minWidth = theme.grid.getBreakpoint(breakpoint)\n    let template = `repeat(${columns}, 1fr)`\n    if (columns === 0) {\n      template = `repeat(auto-fit, minmax(${theme.grid.columnMin}, 1fr))`\n    }\n    return css`\n      @media (min-width: ${minWidth}) {\n        display: grid;\n        grid-gap: ${theme.grid.gap};\n        grid-template-columns: ${template};\n      }\n    `\n  }\n)\n\nexport const Halves = styled.div(\n  ContainerSplit,\n  Colorway,\n  ({ theme, breakpoint, reversed }) => {\n    const minWidth = theme.grid.getBreakpoint(breakpoint)\n    let areas = ['left', 'right']\n    if (reversed) {\n      areas = areas.reverse()\n    }\n    return css`\n      @media (min-width: ${minWidth}) {\n        display: grid;\n        grid-gap: 0;\n        grid-template: '${areas.join(' ')}' / 1fr 1fr;\n      }\n    `\n  }\n)\n\nexport const Thirds = styled.div(\n  ContainerSplit,\n  Colorway,\n  ({ theme, breakpoint }) => {\n    const container = theme.grid.getContainer()\n    const minWidth = theme.grid.getBreakpoint(breakpoint)\n    const gutter = `((100vw - ${container}) / 2)`\n    const fractions = [\n      `calc((${container} / 3) + ${gutter})`,\n      `calc(((${container} / 3) * 2) + ${gutter})`,\n    ]\n    return css`\n      @media (min-width: ${minWidth}) {\n        display: grid;\n        grid-gap: 0;\n        grid-template: 'left right' / ${fractions.join(' ')};\n      }\n      @media (max-width: ${container}) {\n        display: grid;\n        grid-gap: 0;\n        grid-template: 'left right' / 1fr 2fr};\n      }\n    `\n  }\n)\n"]}]}