{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/components/forms/label.jsx","dependencies":[{"path":"/site/src/components/forms/label.jsx","mtime":1573330658000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20gIi9zaXRlL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjsKaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICIvc2l0ZS9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOwppbXBvcnQgX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCBmcm9tICIvc2l0ZS9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIjsKdmFyIF9qc3hGaWxlTmFtZSA9ICIvc2l0ZS9zcmMvY29tcG9uZW50cy9mb3Jtcy9sYWJlbC5qc3giOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5lbnRlck1vZHVsZTsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MigpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbjogIiwgIiAwIDAgMDtcbiAgIiwgIlxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3QyID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0MigpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gICAgIiwgIjtcbiAgICBjb2xvcjogIiwgIjtcbiAgICAmLiIsICIge1xuICAgICAgY29sb3I6ICIsICI7XG4gICAgfVxuICAgICYucmVxdWlyZWQ6OmFmdGVyIHtcbiAgICAgIGNvbnRlbnQ6ICcqJztcbiAgICB9XG4gICJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0KCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsWyJkZWZhdWx0Il0uc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCi8qKiBAanN4IGpzeCAqLwppbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnOwppbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnOwppbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7CmltcG9ydCB7IGNzcywganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7CmltcG9ydCB7IHJnYiB9IGZyb20gJy4uLy4uL3RoZW1lcy91dGlscyc7CmltcG9ydCB7IGZvbnQsIHRvQ2xhc3NOYW1lcyB9IGZyb20gJy4uL3V0aWxzJzsKaW1wb3J0IHsgRVJST1JfQ0xBU1MgfSBmcm9tICcuL3V0aWxzJzsKZXhwb3J0IHZhciBiYXNlTGFiZWwgPSBmdW5jdGlvbiBiYXNlTGFiZWwodGhlbWUpIHsKICByZXR1cm4gY3NzKF90ZW1wbGF0ZU9iamVjdCgpLCBmb250KHRoZW1lKSwgcmdiKHRoZW1lLmNvbG9ycy5jb3B5WyJkZWZhdWx0Il0pLCBFUlJPUl9DTEFTUywgcmdiKHRoZW1lLmNvbG9ycy5kYW5nZXJbImRlZmF1bHQiXSkpOwp9OwoKaWYgKHR5cGVvZiBiYXNlTGFiZWwgIT09ICd1bmRlZmluZWQnICYmIGJhc2VMYWJlbCAmJiBiYXNlTGFiZWwgPT09IE9iamVjdChiYXNlTGFiZWwpICYmIE9iamVjdC5pc0V4dGVuc2libGUoYmFzZUxhYmVsKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShiYXNlTGFiZWwsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJiYXNlTGFiZWwiLAogICAgICBmaWxlbmFtZTogInNyYy9jb21wb25lbnRzL2Zvcm1zL2xhYmVsLmpzeCIKICAgIH0KICB9KTsKfQoKdmFyIFN0eWxlZCA9IHN0eWxlZCgnbGFiZWwnKShfdGVtcGxhdGVPYmplY3QyKCksIGZ1bmN0aW9uIChfcmVmKSB7CiAgdmFyIHRoZW1lID0gX3JlZi50aGVtZTsKICByZXR1cm4gdGhlbWUuc3BhY2luZy5zbWFsbDsKfSwgZnVuY3Rpb24gKF9yZWYyKSB7CiAgdmFyIHRoZW1lID0gX3JlZjIudGhlbWU7CiAgcmV0dXJuIGJhc2VMYWJlbCh0aGVtZSk7Cn0pOwoKdmFyIExhYmVsID0gZnVuY3Rpb24gTGFiZWwoX3JlZjMpIHsKICB2YXIgaHRtbEZvciA9IF9yZWYzLmh0bWxGb3IsCiAgICAgIHJlcXVpcmVkID0gX3JlZjMucmVxdWlyZWQsCiAgICAgIGhhc0Vycm9yID0gX3JlZjMuaGFzRXJyb3IsCiAgICAgIGNsYXNzTmFtZSA9IF9yZWYzLmNsYXNzTmFtZSwKICAgICAgY2hpbGRyZW4gPSBfcmVmMy5jaGlsZHJlbiwKICAgICAgb3RoZXJzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYzLCBbImh0bWxGb3IiLCAicmVxdWlyZWQiLCAiaGFzRXJyb3IiLCAiY2xhc3NOYW1lIiwgImNoaWxkcmVuIl0pOwoKICB2YXIgcmVxQ2xhc3MgPSByZXF1aXJlZCA/ICdyZXF1aXJlZCcgOiAnJzsKICB2YXIgZXJyb3JDbGFzcyA9IGhhc0Vycm9yID8gRVJST1JfQ0xBU1MgOiAnJzsKICByZXR1cm4ganN4KFN0eWxlZCwgX2V4dGVuZHMoewogICAgaHRtbEZvcjogaHRtbEZvciwKICAgIGNsYXNzTmFtZTogdG9DbGFzc05hbWVzKGNsYXNzTmFtZSwgcmVxQ2xhc3MsIGVycm9yQ2xhc3MpCiAgfSwgb3RoZXJzLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAzMQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCBjaGlsZHJlbik7Cn07CgpMYWJlbC5wcm9wVHlwZXMgPSB7CiAgaHRtbEZvcjogUHJvcFR5cGVzLnN0cmluZywKICByZXF1aXJlZDogUHJvcFR5cGVzLmJvb2wsCiAgaGFzRXJyb3I6IFByb3BUeXBlcy5ib29sLAogIGNoaWxkcmVuOiBQcm9wVHlwZXMuc3RyaW5nCn07CkxhYmVsLmRlZmF1bHRQcm9wcyA9IHsKICBodG1sRm9yOiAnJywKICByZXF1aXJlZDogZmFsc2UsCiAgaGFzRXJyb3I6IGZhbHNlCn07CnZhciBfZGVmYXVsdCA9IExhYmVsOwpleHBvcnQgZGVmYXVsdCBfZGVmYXVsdDsKCmlmICh0eXBlb2YgTGFiZWwgIT09ICd1bmRlZmluZWQnICYmIExhYmVsICYmIExhYmVsID09PSBPYmplY3QoTGFiZWwpICYmIE9iamVjdC5pc0V4dGVuc2libGUoTGFiZWwpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KExhYmVsLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiTGFiZWwiLAogICAgICBmaWxlbmFtZTogInNyYy9jb21wb25lbnRzL2Zvcm1zL2xhYmVsLmpzeCIKICAgIH0KICB9KTsKfQoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5kZWZhdWx0OwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihiYXNlTGFiZWwsICJiYXNlTGFiZWwiLCAiL3NpdGUvc3JjL2NvbXBvbmVudHMvZm9ybXMvbGFiZWwuanN4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoU3R5bGVkLCAiU3R5bGVkIiwgIi9zaXRlL3NyYy9jb21wb25lbnRzL2Zvcm1zL2xhYmVsLmpzeCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKExhYmVsLCAiTGFiZWwiLCAiL3NpdGUvc3JjL2NvbXBvbmVudHMvZm9ybXMvbGFiZWwuanN4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoX2RlZmF1bHQsICJkZWZhdWx0IiwgIi9zaXRlL3NyYy9jb21wb25lbnRzL2Zvcm1zL2xhYmVsLmpzeCIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5sZWF2ZU1vZHVsZTsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/site/src/components/forms/label.jsx"],"names":["React","PropTypes","styled","css","jsx","rgb","font","toClassNames","ERROR_CLASS","baseLabel","theme","colors","copy","danger","Styled","spacing","small","Label","htmlFor","required","hasError","className","children","others","reqClass","errorClass","propTypes","string","bool","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,IAAT,EAAeC,YAAf,QAAmC,UAAnC;AACA,SAASC,WAAT,QAA4B,SAA5B;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK;AAAA,SAC5BP,GAD4B,oBAExBG,IAAI,CAACI,KAAD,CAFoB,EAGjBL,GAAG,CAACK,KAAK,CAACC,MAAN,CAAaC,IAAb,WAAD,CAHc,EAItBJ,WAJsB,EAKfH,GAAG,CAACK,KAAK,CAACC,MAAN,CAAaE,MAAb,WAAD,CALY;AAAA,CAAvB;;;;;;;;;;;;;AAYP,IAAMC,MAAM,GAAGZ,MAAM,CAAC,OAAD,CAAT,qBAEA;AAAA,MAAGQ,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAK,CAACK,OAAN,CAAcC,KAA7B;AAAA,CAFA,EAGR;AAAA,MAAGN,KAAH,SAAGA,KAAH;AAAA,SAAeD,SAAS,CAACC,KAAD,CAAxB;AAAA,CAHQ,CAAZ;;AAMA,IAAMO,KAAK,GAAG,SAARA,KAAQ,QAAqE;AAAA,MAAlEC,OAAkE,SAAlEA,OAAkE;AAAA,MAAzDC,QAAyD,SAAzDA,QAAyD;AAAA,MAA/CC,QAA+C,SAA/CA,QAA+C;AAAA,MAArCC,SAAqC,SAArCA,SAAqC;AAAA,MAA1BC,QAA0B,SAA1BA,QAA0B;AAAA,MAAbC,MAAa;;AACjF,MAAMC,QAAQ,GAAGL,QAAQ,GAAG,UAAH,GAAgB,EAAzC;AACA,MAAMM,UAAU,GAAGL,QAAQ,GAAGZ,WAAH,GAAiB,EAA5C;AACA,SAAO,IAAC,MAAD;AAAQ,IAAA,OAAO,EAAEU,OAAjB;AAA0B,IAAA,SAAS,EAAEX,YAAY,CAACc,SAAD,EAAYG,QAAZ,EAAsBC,UAAtB;AAAjD,KAAwFF,MAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAiGD,QAAjG,CAAP;AACD,CAJD;;AAMAL,KAAK,CAACS,SAAN,GAAkB;AAChBR,EAAAA,OAAO,EAAEjB,SAAS,CAAC0B,MADH;AAEhBR,EAAAA,QAAQ,EAAElB,SAAS,CAAC2B,IAFJ;AAGhBR,EAAAA,QAAQ,EAAEnB,SAAS,CAAC2B,IAHJ;AAIhBN,EAAAA,QAAQ,EAAErB,SAAS,CAAC0B;AAJJ,CAAlB;AAOAV,KAAK,CAACY,YAAN,GAAqB;AACnBX,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,QAAQ,EAAE,KAFS;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAArB;eAMeH,K;AAAf;;;;;;;;;;;;;;;;;;;;;;0BArCaR,S;0BAYPK,M;0BAMAG,K","sourcesContent":["/** @jsx jsx */\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\nimport { css, jsx } from '@emotion/core'\nimport { rgb } from '../../themes/utils'\nimport { font, toClassNames } from '../utils'\nimport { ERROR_CLASS } from './utils'\n\nexport const baseLabel = theme =>\n  css`\n    ${font(theme)};\n    color: ${rgb(theme.colors.copy.default)};\n    &.${ERROR_CLASS} {\n      color: ${rgb(theme.colors.danger.default)};\n    }\n    &.required::after {\n      content: '*';\n    }\n  `\n\nconst Styled = styled('label')`\n  display: block;\n  margin: ${({ theme }) => theme.spacing.small} 0 0 0;\n  ${({ theme }) => baseLabel(theme)}\n`\n\nconst Label = ({ htmlFor, required, hasError, className, children, ...others }) => {\n  const reqClass = required ? 'required' : ''\n  const errorClass = hasError ? ERROR_CLASS : ''\n  return <Styled htmlFor={htmlFor} className={toClassNames(className, reqClass, errorClass)} {...others}>{children}</Styled>\n}\n\nLabel.propTypes = {\n  htmlFor: PropTypes.string,\n  required: PropTypes.bool,\n  hasError: PropTypes.bool,\n  children: PropTypes.string,\n}\n\nLabel.defaultProps = {\n  htmlFor: '',\n  required: false,\n  hasError: false,\n}\n\nexport default Label\n"]}]}