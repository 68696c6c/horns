{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/components/utils.js","dependencies":[{"path":"/site/src/components/utils.js","mtime":1573330658000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/site/src/components/utils.js"],"names":["css","React","isUndefined","rgb","valueToInt","COLOR_VARIANT_NONE","getColorVariants","additional","getColorVariantSwatches","colorVariantCSS","theme","variant","swatch","color","colors","isLight","copy","dark","light","colorVariantSwatchValue","colorVariantValue","split","v","s","colorVariantReadableSwatchValue","typographyColor","font","size","fontFace","typography","sizes","lineHeight","fonts","family","weight","textShadow","bgColor","shadow","containerStyle","breakpoints","fluid","padded","min","max","vMin","vMax","start","small","end","large","multiplier","adder","vAdder","scaledGutters","maxGutters","medium","containerStyleHorizontal","diagonalLinesCSS","height","width","Math","sqrt","stop","colorRGB","gradientHorizontalCSS","color1","color2","gradientVerticalCSS","gradientRadialCSS","toClassNames","values","join","trim","isReactFragment","type","Fragment"],"mappings":"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","sourcesContent":["import { css } from '@emotion/core'\nimport React from 'react'\nimport { isUndefined } from '..'\nimport { rgb, valueToInt } from '../themes/utils'\n\n/**\n * Functions in this file are only intended to be used internally and should not be included in the project exports.\n */\n\nexport const COLOR_VARIANT_NONE = 'none'\n\nexport const getColorVariants = (additional = []) => [\n  'primary',\n  'secondary',\n  'tertiary',\n  'light',\n  'neutral',\n  'dark',\n  'success',\n  'info',\n  'warning',\n  'danger',\n  'background',\n  'copy',\n  COLOR_VARIANT_NONE,\n  ...additional,\n]\n\nexport const getColorVariantSwatches = () => [\n  'primary',\n  'primary-dark',\n  'primary-light',\n  'primary-alpha',\n  'secondary',\n  'secondary-dark',\n  'secondary-light',\n  'secondary-alpha',\n  'tertiary',\n  'tertiary-dark',\n  'tertiary-light',\n  'tertiary-alpha',\n  'light',\n  'light-dark',\n  'light-light',\n  'light-alpha',\n  'neutral',\n  'neutral-dark',\n  'neutral-light',\n  'neutral-alpha',\n  'dark',\n  'dark-dark',\n  'dark-light',\n  'dark-alpha',\n  'success',\n  'success-dark',\n  'success-light',\n  'success-alpha',\n  'info',\n  'info-dark',\n  'info-light',\n  'info-alpha',\n  'warning',\n  'warning-dark',\n  'warning-light',\n  'warning-alpha',\n  'danger',\n  'danger-dark',\n  'danger-light',\n  'danger-alpha',\n  'background',\n  'background-dark',\n  'background-light',\n  'background-alpha',\n  'copy',\n  'copy-dark',\n  'copy-light',\n  'copy-alpha',\n  COLOR_VARIANT_NONE,\n]\n\nexport const colorVariantCSS = (theme, variant, swatch = 'default') => {\n  let color = 'inherit'\n  if (variant !== COLOR_VARIANT_NONE) {\n    color = theme.colors[variant][swatch].isLight() ? rgb(theme.colors.copy.dark) : rgb(theme.colors.copy.light)\n  }\n  return css`\n    background: ${variant === COLOR_VARIANT_NONE ? 'none' : rgb(theme.colors[variant][swatch])};\n    color: ${color};\n  `\n}\n\nexport const colorVariantSwatchValue = (theme, variant, swatch = 'default') => {\n  return variant === COLOR_VARIANT_NONE ? 'none' : rgb(theme.colors[variant][swatch])\n}\n\nexport const colorVariantValue = (theme, variant) => {\n  const [v, s] = variant.split('-')\n  const swatch = isUndefined(s) ? 'default' : s\n  return v === COLOR_VARIANT_NONE ? 'none' : rgb(theme.colors[v][swatch])\n}\n\nexport const colorVariantReadableSwatchValue = (theme, variant, swatch = 'default') => {\n  let color = 'inherit'\n  if (variant !== COLOR_VARIANT_NONE) {\n    color = theme.colors[variant][swatch].isLight() ? rgb(theme.colors.copy.dark) : rgb(theme.colors.copy.light)\n  }\n  return color\n}\n\n/**\n * Return an Emotion CSS snippet that applies a CSS color property based on the provided theme variant.\n * @returns SerializedStyles\n */\nexport const typographyColor = (theme, variant) => {\n  let color\n  if (variant === 'copy-dark') {\n    color = rgb(theme.colors.copy.dark)\n  } else if (variant === 'copy-light') {\n    color = rgb(theme.colors.copy.light)\n  } else if (variant === 'inherit') {\n    color = 'inherit'\n  } else {\n    color = rgb(theme.colors[variant].default)\n  }\n  return css`\n    color: ${color};\n  `\n}\n\nexport const font = (theme, size = 'default', fontFace = 'default') => {\n  return css`\n    font-size: ${theme.typography.sizes[size]};\n    line-height: ${theme.typography.lineHeight};\n    font-family: ${theme.typography.fonts[fontFace].family};\n    font-weight: ${theme.typography.fonts[fontFace].weight};\n  `\n}\n\nexport const textShadow = (theme, bgColor, swatch = 'default') => {\n  let color = rgb(theme.colors.copy.light)\n  let shadow = rgb(theme.colors.copy.dark)\n  if (theme.colors[bgColor][swatch].isLight()) {\n    color = rgb(theme.colors.copy.dark)\n    shadow = rgb(theme.colors.copy.light)\n  }\n  return css`\n    color: ${color};\n    text-shadow: -1px -1px 0 ${shadow}, 1px -1px 0 ${shadow}, -1px 1px 0 ${shadow}, 1px 1px 0 ${shadow};\n  `\n}\n\nexport const containerStyle = (breakpoints, fluid = false, padded = true) => {\n  const min = fluid ? 0 : 20\n  const max = fluid ? 0 : 50\n  const vMin = padded ? 20 : 0\n  const vMax = padded ? 50 : 0\n  const start = valueToInt(breakpoints.small)\n  const end = valueToInt(breakpoints.large)\n  const multiplier = (max - min) / (end - start) * 100\n  const adder = (min * end - max * start) / (end - start)\n  const vAdder = (vMin * end - vMax * start) / (end - start)\n  const scaledGutters = fluid ? '0px' : `calc(${multiplier}vw + ${adder}px)`\n  const maxGutters = fluid ? '0px' : `calc((100% - ${breakpoints.max}) / 2)`\n  return css`\n    padding: ${vMin}px ${min}px;\n    @media(min-width: ${breakpoints.medium}) {\n      padding: calc(${multiplier}vw + ${vAdder}px) ${scaledGutters};\n    }\n    @media(min-width: ${breakpoints.large}) {\n      padding: ${vMax}px ${max}px;\n    }\n    @media (min-width: ${breakpoints.max}) {\n      padding: ${vMax}px ${maxGutters};\n    }\n  `\n}\n\nexport const containerStyleHorizontal = (breakpoints, fluid = false) => {\n  const min = fluid ? 0 : 20\n  const max = fluid ? 0 : 50\n  const start = valueToInt(breakpoints.small)\n  const end = valueToInt(breakpoints.large)\n  const multiplier = (max - min) / (end - start) * 100\n  const adder = (min * end - max * start) / (end - start)\n  const scaledGutters = fluid ? '0px' : `calc(${multiplier}vw + ${adder}px)`\n  const maxGutters = fluid ? '0px' : `calc((100% - ${breakpoints.max}) / 2)`\n  return css`\n    padding-left: ${min}px;\n    padding-right: ${min}px;\n    @media(min-width: ${breakpoints.medium}) {\n      padding-left: ${scaledGutters};\n      padding-right: ${scaledGutters};\n    }\n    @media(min-width: ${breakpoints.large}) {\n      padding-left: ${min}px;\n      padding-right: ${min}px;\n    }\n    @media (min-width: ${breakpoints.max}) {\n      padding-left: ${maxGutters};\n      padding-right: ${maxGutters};\n    }\n  `\n}\n\n// The width of the stripe, measured at the base, is leg of a 45-45-90 right triangle.\n// For the first stripe to start at the top left corner of the bar, the height of the background needs to be equal to the hypotenuse.\n// width = Math.sqrt(height / 2)\n// For thicker stripes, height can be manipulated, e.g. Math.sqrt(height) produces stripes twice as thick, Math.sqrt(height * 2) produces stripes four times as thick, etc.\nexport const diagonalLinesCSS = (color, height) => {\n  const width = Math.sqrt(height * 2)\n  const stop = width * 2\n  const colorRGB = rgb(color)\n  return css`repeating-linear-gradient(45deg, transparent 0px, transparent ${width}px, ${colorRGB} ${width}px, ${colorRGB} ${stop}px)`\n}\n\nexport const gradientHorizontalCSS = (color1, color2) => {\n  return css`linear-gradient(to right, ${rgb(color1)} 0%, ${rgb(color2)} 100%)`\n}\n\nexport const gradientVerticalCSS = (color1, color2) => {\n  return css`linear-gradient(to bottom, ${rgb(color1)} 0%, ${rgb(color2)} 100%)`\n}\n\nexport const gradientRadialCSS = (color1, color2) => {\n  return css`radial-gradient(${rgb(color1)}, ${rgb(color2)})`\n}\n\n// @TODO remove in favor of version in ./utils/component.js\nexport const toClassNames = (...values) => values.join(' ').trim()\n\nexport const isReactFragment = v =>\n  v.type ? v.type === React.Fragment : v === React.Fragment\n"]}]}