{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/utils/component.js","dependencies":[{"path":"/site/src/utils/component.js","mtime":1573330658000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL3NpdGUvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZCI7CmltcG9ydCBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMgZnJvbSAiL3NpdGUvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGVudGVyTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZW50ZXJNb2R1bGU7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsWyJkZWZhdWx0Il0uc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7Cgp2YXIgdG9DbGFzc05hbWVzID0gZnVuY3Rpb24gdG9DbGFzc05hbWVzKCkgewogIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCB2YWx1ZXMgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7CiAgICB2YWx1ZXNbX2tleV0gPSBhcmd1bWVudHNbX2tleV07CiAgfQoKICByZXR1cm4gdmFsdWVzLmpvaW4oJyAnKS50cmltKCk7Cn07CgpleHBvcnQgdmFyIHByb3BUeXBlQ2hpbGRyZW4gPSBmdW5jdGlvbiBwcm9wVHlwZUNoaWxkcmVuKCkgewogIHJldHVybiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMubm9kZSwgUHJvcFR5cGVzLm9iamVjdE9mKFByb3BUeXBlcy5ub2RlKSwgUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm5vZGUpXSk7Cn07CgppZiAodHlwZW9mIHByb3BUeXBlQ2hpbGRyZW4gIT09ICd1bmRlZmluZWQnICYmIHByb3BUeXBlQ2hpbGRyZW4gJiYgcHJvcFR5cGVDaGlsZHJlbiA9PT0gT2JqZWN0KHByb3BUeXBlQ2hpbGRyZW4pICYmIE9iamVjdC5pc0V4dGVuc2libGUocHJvcFR5cGVDaGlsZHJlbikpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkocHJvcFR5cGVDaGlsZHJlbiwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogInByb3BUeXBlQ2hpbGRyZW4iLAogICAgICBmaWxlbmFtZTogInNyYy91dGlscy9jb21wb25lbnQuanMiCiAgICB9CiAgfSk7Cn0KCmV4cG9ydCB2YXIgaGFuZGxlUHJvcHMgPSBmdW5jdGlvbiBoYW5kbGVQcm9wcyhfcmVmKSB7CiAgdmFyIG5hbWUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICcnOwoKICB2YXIgY2xhc3NOYW1lID0gX3JlZi5jbGFzc05hbWUsCiAgICAgIG90aGVycyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmLCBbImNsYXNzTmFtZSJdKTsKCiAgdmFyIHByb3BzID0gX29iamVjdFNwcmVhZCh7CiAgICBjbGFzc05hbWU6IHRvQ2xhc3NOYW1lcyhuYW1lLCBjbGFzc05hbWUpCiAgfSwgb3RoZXJzKTsKCiAgcmV0dXJuIHByb3BzOwp9OwoKaWYgKHR5cGVvZiBoYW5kbGVQcm9wcyAhPT0gJ3VuZGVmaW5lZCcgJiYgaGFuZGxlUHJvcHMgJiYgaGFuZGxlUHJvcHMgPT09IE9iamVjdChoYW5kbGVQcm9wcykgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShoYW5kbGVQcm9wcykpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoaGFuZGxlUHJvcHMsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJoYW5kbGVQcm9wcyIsCiAgICAgIGZpbGVuYW1lOiAic3JjL3V0aWxzL2NvbXBvbmVudC5qcyIKICAgIH0KICB9KTsKfQoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5kZWZhdWx0OwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3Rlcih0b0NsYXNzTmFtZXMsICJ0b0NsYXNzTmFtZXMiLCAiL3NpdGUvc3JjL3V0aWxzL2NvbXBvbmVudC5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKHByb3BUeXBlQ2hpbGRyZW4sICJwcm9wVHlwZUNoaWxkcmVuIiwgIi9zaXRlL3NyYy91dGlscy9jb21wb25lbnQuanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihoYW5kbGVQcm9wcywgImhhbmRsZVByb3BzIiwgIi9zaXRlL3NyYy91dGlscy9jb21wb25lbnQuanMiKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkubGVhdmVNb2R1bGU7CiAgbGVhdmVNb2R1bGUgJiYgbGVhdmVNb2R1bGUobW9kdWxlKTsKfSkoKTs="},{"version":3,"sources":["/site/src/utils/component.js"],"names":["PropTypes","toClassNames","values","join","trim","propTypeChildren","oneOfType","node","objectOf","arrayOf","handleProps","name","className","others","props"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,oCAAIC,MAAJ;AAAIA,IAAAA,MAAJ;AAAA;;AAAA,SAAeA,MAAM,CAACC,IAAP,CAAY,GAAZ,EAAiBC,IAAjB,EAAf;AAAA,CAArB;;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAC9BL,SAAS,CAACM,SAAV,CAAoB,CAClBN,SAAS,CAACO,IADQ,EAElBP,SAAS,CAACQ,QAAV,CAAmBR,SAAS,CAACO,IAA7B,CAFkB,EAGlBP,SAAS,CAACS,OAAV,CAAkBT,SAAS,CAACO,IAA5B,CAHkB,CAApB,CAD8B;AAAA,CAAzB;;;;;;;;;;;;;AAOP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,OAAyC;AAAA,MAAdC,IAAc,uEAAP,EAAO;;AAAA,MAAtCC,SAAsC,QAAtCA,SAAsC;AAAA,MAAxBC,MAAwB;;AAClE,MAAMC,KAAK;AACTF,IAAAA,SAAS,EAAEX,YAAY,CAACU,IAAD,EAAOC,SAAP;AADd,KAENC,MAFM,CAAX;;AAIA,SAAOC,KAAP;AACD,CANM;;;;;;;;;;;;;;;;;;;;;;0BATDb,Y;0BAEOI,gB;0BAOAK,W","sourcesContent":["import PropTypes from 'prop-types'\n\nconst toClassNames = (...values) => values.join(' ').trim()\n\nexport const propTypeChildren = () =>\n  PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.objectOf(PropTypes.node),\n    PropTypes.arrayOf(PropTypes.node),\n  ])\n\nexport const handleProps = ({ className, ...others }, name = '') => {\n  const props = {\n    className: toClassNames(name, className),\n    ...others,\n  }\n  return props\n}\n"]}]}