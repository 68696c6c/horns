{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/components/svg/polygon.jsx","dependencies":[{"path":"/site/src/components/svg/polygon.jsx","mtime":1573330658000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwgZnJvbSAiL3NpdGUvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmVudGVyTW9kdWxlOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIHN0cm9rZS13aWR0aDogIiwgIjtcbiAgc3Ryb2tlOiAiLCAiO1xuICBmaWxsOiAiLCAiO1xuIl0pOwoKICBfdGVtcGxhdGVPYmplY3QgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKdmFyIF9fc2lnbmF0dXJlX18gPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWxbImRlZmF1bHQiXS5zaWduYXR1cmUgOiBmdW5jdGlvbiAoYSkgewogIHJldHVybiBhOwp9OwoKaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnOwppbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnOwppbXBvcnQgeyByZ2IgfSBmcm9tICcuLi8uLi90aGVtZXMvdXRpbHMnOwp2YXIgVkFSSUFOVF9OT05FID0gJ25vbmUnOwp2YXIgU1ZHUG9seWdvbiA9IHN0eWxlZCgncG9seWdvbicpKF90ZW1wbGF0ZU9iamVjdCgpLCBmdW5jdGlvbiAoX3JlZikgewogIHZhciBzdHJva2VXaWR0aCA9IF9yZWYuc3Ryb2tlV2lkdGg7CiAgcmV0dXJuIHN0cm9rZVdpZHRoOwp9LCBmdW5jdGlvbiAoX3JlZjIpIHsKICB2YXIgdGhlbWUgPSBfcmVmMi50aGVtZSwKICAgICAgc3Ryb2tlID0gX3JlZjIuc3Ryb2tlOwogIHJldHVybiBzdHJva2UgPT09IFZBUklBTlRfTk9ORSA/IHN0cm9rZSA6IHJnYih0aGVtZS5jb2xvcnNbc3Ryb2tlXVsiZGVmYXVsdCJdKTsKfSwgZnVuY3Rpb24gKF9yZWYzKSB7CiAgdmFyIHRoZW1lID0gX3JlZjMudGhlbWUsCiAgICAgIGZpbGwgPSBfcmVmMy5maWxsOwogIHJldHVybiBmaWxsID09PSBWQVJJQU5UX05PTkUgPyBmaWxsIDogcmdiKHRoZW1lLmNvbG9yc1tmaWxsXVsiZGVmYXVsdCJdKTsKfSk7ClNWR1BvbHlnb24ucHJvcFR5cGVzID0gewogIHN0cm9rZVdpZHRoOiBQcm9wVHlwZXMubnVtYmVyLAogIHN0cm9rZTogUHJvcFR5cGVzLm9uZU9mKFsncHJpbWFyeScsICdzZWNvbmRhcnknLCAndGVydGlhcnknLCAnbGlnaHQnLCAnbmV1dHJhbCcsICdkYXJrJywgJ3N1Y2Nlc3MnLCAnaW5mbycsICd3YXJuaW5nJywgJ2RhbmdlcicsICdiYWNrZ3JvdW5kJywgJ2NvcHknLCBWQVJJQU5UX05PTkVdKSwKICBmaWxsOiBQcm9wVHlwZXMub25lT2YoWydwcmltYXJ5JywgJ3NlY29uZGFyeScsICd0ZXJ0aWFyeScsICdsaWdodCcsICduZXV0cmFsJywgJ2RhcmsnLCAnc3VjY2VzcycsICdpbmZvJywgJ3dhcm5pbmcnLCAnZGFuZ2VyJywgJ2JhY2tncm91bmQnLCAnY29weScsIFZBUklBTlRfTk9ORV0pCn07ClNWR1BvbHlnb24uZGVmYXVsdFByb3BzID0gewogIHN0cm9rZVdpZHRoOiAxLAogIHN0cm9rZTogVkFSSUFOVF9OT05FLAogIGZpbGw6IFZBUklBTlRfTk9ORQp9Owp2YXIgX2RlZmF1bHQgPSBTVkdQb2x5Z29uOwpleHBvcnQgZGVmYXVsdCBfZGVmYXVsdDsKCmlmICh0eXBlb2YgU1ZHUG9seWdvbiAhPT0gJ3VuZGVmaW5lZCcgJiYgU1ZHUG9seWdvbiAmJiBTVkdQb2x5Z29uID09PSBPYmplY3QoU1ZHUG9seWdvbikgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShTVkdQb2x5Z29uKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShTVkdQb2x5Z29uLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiU1ZHUG9seWdvbiIsCiAgICAgIGZpbGVuYW1lOiAic3JjL2NvbXBvbmVudHMvc3ZnL3BvbHlnb24uanN4IgogICAgfQogIH0pOwp9Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciByZWFjdEhvdExvYWRlciA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmRlZmF1bHQ7CgogIGlmICghcmVhY3RIb3RMb2FkZXIpIHsKICAgIHJldHVybjsKICB9CgogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKFZBUklBTlRfTk9ORSwgIlZBUklBTlRfTk9ORSIsICIvc2l0ZS9zcmMvY29tcG9uZW50cy9zdmcvcG9seWdvbi5qc3giKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihTVkdQb2x5Z29uLCAiU1ZHUG9seWdvbiIsICIvc2l0ZS9zcmMvY29tcG9uZW50cy9zdmcvcG9seWdvbi5qc3giKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihfZGVmYXVsdCwgImRlZmF1bHQiLCAiL3NpdGUvc3JjL2NvbXBvbmVudHMvc3ZnL3BvbHlnb24uanN4Iik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmxlYXZlTW9kdWxlOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["/site/src/components/svg/polygon.jsx"],"names":["styled","PropTypes","rgb","VARIANT_NONE","SVGPolygon","strokeWidth","theme","stroke","colors","fill","propTypes","number","oneOf","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,GAAT,QAAoB,oBAApB;AAEA,IAAMC,YAAY,GAAG,MAArB;AAEA,IAAMC,UAAU,GAAGJ,MAAM,CAAC,SAAD,CAAT,oBACE;AAAA,MAAGK,WAAH,QAAGA,WAAH;AAAA,SAAqBA,WAArB;AAAA,CADF,EAEJ;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,MAAUC,MAAV,SAAUA,MAAV;AAAA,SAAuBA,MAAM,KAAKJ,YAAX,GAA0BI,MAA1B,GAAmCL,GAAG,CAACI,KAAK,CAACE,MAAN,CAAaD,MAAb,YAAD,CAA7D;AAAA,CAFI,EAGN;AAAA,MAAGD,KAAH,SAAGA,KAAH;AAAA,MAAUG,IAAV,SAAUA,IAAV;AAAA,SAAqBA,IAAI,KAAKN,YAAT,GAAwBM,IAAxB,GAA+BP,GAAG,CAACI,KAAK,CAACE,MAAN,CAAaC,IAAb,YAAD,CAAvD;AAAA,CAHM,CAAhB;AAMAL,UAAU,CAACM,SAAX,GAAuB;AACrBL,EAAAA,WAAW,EAAEJ,SAAS,CAACU,MADF;AAErBJ,EAAAA,MAAM,EAAEN,SAAS,CAACW,KAAV,CAAgB,CACtB,SADsB,EAEtB,WAFsB,EAGtB,UAHsB,EAItB,OAJsB,EAKtB,SALsB,EAMtB,MANsB,EAOtB,SAPsB,EAQtB,MARsB,EAStB,SATsB,EAUtB,QAVsB,EAWtB,YAXsB,EAYtB,MAZsB,EAatBT,YAbsB,CAAhB,CAFa;AAiBrBM,EAAAA,IAAI,EAAER,SAAS,CAACW,KAAV,CAAgB,CACpB,SADoB,EAEpB,WAFoB,EAGpB,UAHoB,EAIpB,OAJoB,EAKpB,SALoB,EAMpB,MANoB,EAOpB,SAPoB,EAQpB,MARoB,EASpB,SAToB,EAUpB,QAVoB,EAWpB,YAXoB,EAYpB,MAZoB,EAapBT,YAboB,CAAhB;AAjBe,CAAvB;AAkCAC,UAAU,CAACS,YAAX,GAA0B;AACxBR,EAAAA,WAAW,EAAE,CADW;AAExBE,EAAAA,MAAM,EAAEJ,YAFgB;AAGxBM,EAAAA,IAAI,EAAEN;AAHkB,CAA1B;eAMeC,U;AAAf;;;;;;;;;;;;;;;;;;;;;;0BAhDMD,Y;0BAEAC,U","sourcesContent":["import styled from '@emotion/styled'\nimport PropTypes from 'prop-types'\nimport { rgb } from '../../themes/utils'\n\nconst VARIANT_NONE = 'none'\n\nconst SVGPolygon = styled('polygon')`\n  stroke-width: ${({ strokeWidth }) => strokeWidth};\n  stroke: ${({ theme, stroke }) => stroke === VARIANT_NONE ? stroke : rgb(theme.colors[stroke].default)};\n  fill: ${({ theme, fill }) => fill === VARIANT_NONE ? fill : rgb(theme.colors[fill].default)};\n`\n\nSVGPolygon.propTypes = {\n  strokeWidth: PropTypes.number,\n  stroke: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'tertiary',\n    'light',\n    'neutral',\n    'dark',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'background',\n    'copy',\n    VARIANT_NONE,\n  ]),\n  fill: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'tertiary',\n    'light',\n    'neutral',\n    'dark',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'background',\n    'copy',\n    VARIANT_NONE,\n  ]),\n}\n\nSVGPolygon.defaultProps = {\n  strokeWidth: 1,\n  stroke: VARIANT_NONE,\n  fill: VARIANT_NONE,\n}\n\nexport default SVGPolygon\n"]}]}