{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/components/lists/steps.jsx","dependencies":[{"path":"/site/src/components/lists/steps.jsx","mtime":1573330658000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/site/src/components/lists/steps.jsx"],"names":["styled","jsx","React","PropTypes","uuid","colorVariantCSS","font","isArray","isUndefined","baseList","StyledStepIconWrapper","theme","StyledStepIcon","rounded","variant","StyledListSteps","StyledListStepItem","spacing","xsmall","StyledListStepsContent","renderItems","children","childrenArray","map","child","index","props","ListStepsItem","number","others","propTypes","isRequired","bool","oneOf","ListSteps","icons","string","defaultProps"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport styled from '@emotion/styled'\nimport { jsx } from '@emotion/core'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport uuid from 'uuid/v4'\nimport { colorVariantCSS, font } from '../utils'\nimport { isArray, isUndefined } from '../../utils/utils'\nimport baseList from './base'\n\nconst StyledStepIconWrapper = styled('span')`\n  display: inline-block;\n  ${({ theme }) => font(theme, 'large')};\n  width: 2em;\n  height: 2em;\n  margin-bottom: .75em;\n`\nconst StyledStepIcon = styled('span')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  ${({ rounded }) => rounded ? 'border-radius: 50%' : ''};\n  ${({ theme, variant }) => colorVariantCSS(theme, variant)};\n`\nconst StyledListSteps = styled('ol')`\n  ${({ theme }) => baseList(theme)};\n`\nconst StyledListStepItem = styled('li')`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: ${({ theme }) => theme.spacing.xsmall};\n`\nconst StyledListStepsContent = styled('div')`\n  text-align: center;\n`\n\nconst renderItems = (children, variant, rounded) => {\n  const childrenArray = isArray(children) ? children : [children]\n  return childrenArray.map((child, index) => {\n    let props = {\n      ...child.props\n    }\n    if (isUndefined(props.variant)) {\n      props.variant = variant\n    }\n    return (\n      <ListStepsItem number={index + 1} rounded={rounded} key={uuid()} {...props}>\n        <StyledListStepsContent>\n          {child.props.children}\n        </StyledListStepsContent>\n      </ListStepsItem>\n    )\n  })\n}\n\nconst ListStepsItem = ({ number, rounded, variant, children, ...others }) => (\n  <StyledListStepItem {...others}>\n    <StyledStepIconWrapper>\n      <StyledStepIcon rounded={rounded} variant={variant}>{number}</StyledStepIcon>\n    </StyledStepIconWrapper>\n    {children}\n  </StyledListStepItem>\n)\n\nListStepsItem.propTypes = {\n  number: PropTypes.number.isRequired,\n  rounded: PropTypes.bool.isRequired,\n  variant: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'tertiary',\n    'light',\n    'neutral',\n    'dark',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'copy',\n  ]),\n}\n\nconst ListSteps = ({ rounded, variant, children, ...others }) => (\n  <StyledListSteps {...others}>\n    {renderItems(children, variant, rounded)}\n  </StyledListSteps>\n)\n\nListSteps.propTypes = {\n  icons: PropTypes.string,\n  rounded: PropTypes.bool,\n  variant: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'tertiary',\n    'light',\n    'neutral',\n    'dark',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'copy',\n  ]),\n}\n\nListSteps.defaultProps = {\n  rounded: true,\n  variant: 'copy',\n}\n\nexport default ListSteps\n"]}]}