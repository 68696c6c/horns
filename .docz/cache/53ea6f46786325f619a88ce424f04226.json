{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/components/data-tables/ref-example.jsx","dependencies":[{"path":"/site/src/components/data-tables/ref-example.jsx","mtime":1573330658000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvc2l0ZS9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9zaXRlL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tICIvc2l0ZS9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiI7CmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSAiL3NpdGUvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2dldFByb3RvdHlwZU9mIjsKaW1wb3J0IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSAiL3NpdGUvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2Fzc2VydFRoaXNJbml0aWFsaXplZCI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiL3NpdGUvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKdmFyIF9qc3hGaWxlTmFtZSA9ICIvc2l0ZS9zcmMvY29tcG9uZW50cy9kYXRhLXRhYmxlcy9yZWYtZXhhbXBsZS5qc3giOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgZW50ZXJNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5lbnRlck1vZHVsZTsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKdmFyIF9fc2lnbmF0dXJlX18gPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWxbImRlZmF1bHQiXS5zaWduYXR1cmUgOiBmdW5jdGlvbiAoYSkgewogIHJldHVybiBhOwp9OwoKaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IERhdGFUYWJsZSBmcm9tICcuL2RhdGEtdGFibGUnOwppbXBvcnQgRGF0YVRhYmxlQXN5bmMgZnJvbSAnLi9kYXRhLXRhYmxlLWFzeW5jJzsKZXhwb3J0IHZhciBSZWZFeGFtcGxlID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkgewogIF9pbmhlcml0cyhSZWZFeGFtcGxlLCBfUmVhY3QkQ29tcG9uZW50KTsKCiAgZnVuY3Rpb24gUmVmRXhhbXBsZShwcm9wcykgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZWZFeGFtcGxlKTsKCiAgICBfdGhpcyA9IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihSZWZFeGFtcGxlKS5jYWxsKHRoaXMsIHByb3BzKSk7CiAgICBfdGhpcy50YWJsZVJlZiA9IFJlYWN0LmNyZWF0ZVJlZigpOwogICAgX3RoaXMudXBkYXRlID0gX3RoaXMudXBkYXRlLmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpOwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFJlZkV4YW1wbGUsIFt7CiAgICBrZXk6ICJ1cGRhdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZSgpIHsKICAgICAgY29uc29sZS5sb2coJ3JlZicsIHRoaXMudGFibGVSZWYuY3VycmVudCk7CiAgICB9CiAgfSwgewogICAga2V5OiAicmVuZGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7CiAgICAgIHZhciBjaGlsZHJlbiA9IHRoaXMucHJvcHMuY2hpbGRyZW47CiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFJlYWN0LkZyYWdtZW50LCBudWxsLCBSZWFjdC5jcmVhdGVFbGVtZW50KCJidXR0b24iLCB7CiAgICAgICAgdHlwZTogImJ1dHRvbiIsCiAgICAgICAgb25DbGljazogdGhpcy51cGRhdGUsCiAgICAgICAgX19zb3VyY2U6IHsKICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgICBsaW5lTnVtYmVyOiAyMAogICAgICAgIH0sCiAgICAgICAgX19zZWxmOiB0aGlzCiAgICAgIH0sICJjb25zb2xlLmxvZyByZWYiKSwgUmVhY3QuY3JlYXRlRWxlbWVudChEYXRhVGFibGUsIHsKICAgICAgICByZWY6IHRoaXMudGFibGVSZWYsCiAgICAgICAgX19zb3VyY2U6IHsKICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgICBsaW5lTnVtYmVyOiAyMQogICAgICAgIH0sCiAgICAgICAgX19zZWxmOiB0aGlzCiAgICAgIH0sIGNoaWxkcmVuKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiX19yZWFjdHN0YW5kaW5fX3JlZ2VuZXJhdGVCeUV2YWwiLAogICAgLy8gQHRzLWlnbm9yZQogICAgdmFsdWU6IGZ1bmN0aW9uIF9fcmVhY3RzdGFuZGluX19yZWdlbmVyYXRlQnlFdmFsKGtleSwgY29kZSkgewogICAgICAvLyBAdHMtaWdub3JlCiAgICAgIHRoaXNba2V5XSA9IGV2YWwoY29kZSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gUmVmRXhhbXBsZTsKfShSZWFjdC5Db21wb25lbnQpOwoKaWYgKHR5cGVvZiBSZWZFeGFtcGxlICE9PSAndW5kZWZpbmVkJyAmJiBSZWZFeGFtcGxlICYmIFJlZkV4YW1wbGUgPT09IE9iamVjdChSZWZFeGFtcGxlKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKFJlZkV4YW1wbGUpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFJlZkV4YW1wbGUsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJSZWZFeGFtcGxlIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvY29tcG9uZW50cy9kYXRhLXRhYmxlcy9yZWYtZXhhbXBsZS5qc3giCiAgICB9CiAgfSk7Cn0KCmV4cG9ydCB2YXIgUmVmRXhhbXBsZUFzeW5jID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudDIpIHsKICBfaW5oZXJpdHMoUmVmRXhhbXBsZUFzeW5jLCBfUmVhY3QkQ29tcG9uZW50Mik7CgogIGZ1bmN0aW9uIFJlZkV4YW1wbGVBc3luYyhwcm9wcykgewogICAgdmFyIF90aGlzMjsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmVmRXhhbXBsZUFzeW5jKTsKCiAgICBfdGhpczIgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoUmVmRXhhbXBsZUFzeW5jKS5jYWxsKHRoaXMsIHByb3BzKSk7CiAgICBfdGhpczIudGFibGVSZWYgPSBSZWFjdC5jcmVhdGVSZWYoKTsKICAgIF90aGlzMi51cGRhdGUgPSBfdGhpczIudXBkYXRlLmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpczIpKTsKICAgIHJldHVybiBfdGhpczI7CiAgfQoKICBfY3JlYXRlQ2xhc3MoUmVmRXhhbXBsZUFzeW5jLCBbewogICAga2V5OiAidXBkYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGUoKSB7CiAgICAgIGNvbnNvbGUubG9nKCdyZWYnLCB0aGlzLnRhYmxlUmVmLmN1cnJlbnQpOwogICAgICB0aGlzLnRhYmxlUmVmLmN1cnJlbnQucmVmcmVzaCgpOwogICAgfQogIH0sIHsKICAgIGtleTogInJlbmRlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkgewogICAgICB2YXIgZmlsdGVyUm93cyA9IHRoaXMucHJvcHMuZmlsdGVyUm93czsKICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIsIHsKICAgICAgICB0eXBlOiAiYnV0dG9uIiwKICAgICAgICBvbkNsaWNrOiB0aGlzLnVwZGF0ZSwKICAgICAgICBfX3NvdXJjZTogewogICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgICAgIGxpbmVOdW1iZXI6IDQzCiAgICAgICAgfSwKICAgICAgICBfX3NlbGY6IHRoaXMKICAgICAgfSwgImNvbnNvbGUubG9nIHJlZiIpLCBSZWFjdC5jcmVhdGVFbGVtZW50KERhdGFUYWJsZUFzeW5jLCB7CiAgICAgICAgcmVmOiB0aGlzLnRhYmxlUmVmLAogICAgICAgIGZpbHRlclJvd3M6IGZpbHRlclJvd3MsCiAgICAgICAgX19zb3VyY2U6IHsKICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgICBsaW5lTnVtYmVyOiA0NAogICAgICAgIH0sCiAgICAgICAgX19zZWxmOiB0aGlzCiAgICAgIH0pKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJfX3JlYWN0c3RhbmRpbl9fcmVnZW5lcmF0ZUJ5RXZhbCIsCiAgICAvLyBAdHMtaWdub3JlCiAgICB2YWx1ZTogZnVuY3Rpb24gX19yZWFjdHN0YW5kaW5fX3JlZ2VuZXJhdGVCeUV2YWwoa2V5LCBjb2RlKSB7CiAgICAgIC8vIEB0cy1pZ25vcmUKICAgICAgdGhpc1trZXldID0gZXZhbChjb2RlKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBSZWZFeGFtcGxlQXN5bmM7Cn0oUmVhY3QuQ29tcG9uZW50KTsKCmlmICh0eXBlb2YgUmVmRXhhbXBsZUFzeW5jICE9PSAndW5kZWZpbmVkJyAmJiBSZWZFeGFtcGxlQXN5bmMgJiYgUmVmRXhhbXBsZUFzeW5jID09PSBPYmplY3QoUmVmRXhhbXBsZUFzeW5jKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKFJlZkV4YW1wbGVBc3luYykpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUmVmRXhhbXBsZUFzeW5jLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiUmVmRXhhbXBsZUFzeW5jIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvY29tcG9uZW50cy9kYXRhLXRhYmxlcy9yZWYtZXhhbXBsZS5qc3giCiAgICB9CiAgfSk7Cn0KCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoUmVmRXhhbXBsZSwgIlJlZkV4YW1wbGUiLCAiL3NpdGUvc3JjL2NvbXBvbmVudHMvZGF0YS10YWJsZXMvcmVmLWV4YW1wbGUuanN4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoUmVmRXhhbXBsZUFzeW5jLCAiUmVmRXhhbXBsZUFzeW5jIiwgIi9zaXRlL3NyYy9jb21wb25lbnRzL2RhdGEtdGFibGVzL3JlZi1leGFtcGxlLmpzeCIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5sZWF2ZU1vZHVsZTsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/site/src/components/data-tables/ref-example.jsx"],"names":["React","DataTable","DataTableAsync","RefExample","props","tableRef","createRef","update","bind","console","log","current","children","Component","RefExampleAsync","refresh","filterRows"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AAEA,WAAaC,UAAb;AAAA;AAAA;AAAA;;AACE,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;AACA,UAAKC,QAAL,GAAgBL,KAAK,CAACM,SAAN,EAAhB;AACA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,+BAAd;AAHiB;AAIlB;;AALH;AAAA;AAAA,6BAOW;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB,KAAKL,QAAL,CAAcM,OAAjC;AACD;AATH;AAAA;AAAA,6BAWW;AAAA,UACCC,QADD,GACc,KAAKR,KADnB,CACCQ,QADD;AAEP,aACE,0CACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKL,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAE,KAAKF,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCO,QAAhC,CAFF,CADF;AAMD;AAnBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAgCZ,KAAK,CAACa,SAAtC;;;;;;;;;;;;;AAsBA,WAAaC,eAAb;AAAA;AAAA;AAAA;;AACE,2BAAYV,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,0FAAMA,KAAN;AACA,WAAKC,QAAL,GAAgBL,KAAK,CAACM,SAAN,EAAhB;AACA,WAAKC,MAAL,GAAc,OAAKA,MAAL,CAAYC,IAAZ,gCAAd;AAHiB;AAIlB;;AALH;AAAA;AAAA,6BAOW;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB,KAAKL,QAAL,CAAcM,OAAjC;AACA,WAAKN,QAAL,CAAcM,OAAd,CAAsBI,OAAtB;AACD;AAVH;AAAA;AAAA,6BAYW;AAAA,UACCC,UADD,GACgB,KAAKZ,KADrB,CACCY,UADD;AAEP,aACE,0CACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKT,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,cAAD;AACE,QAAA,GAAG,EAAE,KAAKF,QADZ;AAEE,QAAA,UAAU,EAAEW,UAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AASD;AAvBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAqChB,KAAK,CAACa,SAA3C;;;;;;;;;;;;;;;;;;;;;;0BAtBaV,U;0BAsBAW,e","sourcesContent":["import React from 'react'\nimport DataTable from './data-table'\nimport DataTableAsync from './data-table-async'\n\nexport class RefExample extends React.Component {\n  constructor(props) {\n    super(props)\n    this.tableRef = React.createRef()\n    this.update = this.update.bind(this)\n  }\n\n  update() {\n    console.log('ref', this.tableRef.current)\n  }\n\n  render() {\n    const { children } = this.props\n    return (\n      <>\n        <button type=\"button\" onClick={this.update}>console.log ref</button>\n        <DataTable ref={this.tableRef}>{children}</DataTable>\n      </>\n    )\n  }\n}\n\nexport class RefExampleAsync extends React.Component {\n  constructor(props) {\n    super(props)\n    this.tableRef = React.createRef()\n    this.update = this.update.bind(this)\n  }\n\n  update() {\n    console.log('ref', this.tableRef.current)\n    this.tableRef.current.refresh()\n  }\n\n  render() {\n    const { filterRows } = this.props\n    return (\n      <>\n        <button type=\"button\" onClick={this.update}>console.log ref</button>\n        <DataTableAsync\n          ref={this.tableRef}\n          filterRows={filterRows}\n        />\n      </>\n    )\n  }\n}\n"]}]}