{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/components/_demo/layout-demo.jsx","dependencies":[{"path":"/site/src/components/_demo/layout-demo.jsx","mtime":1573330658000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/site/src/components/_demo/layout-demo.jsx"],"names":["styled","jsx","React","ReactDOM","PropTypes","ThemeProvider","theme","RenderInBody","props","container","document","createElement","body","appendChild","_renderLayer","unmountComponentAtNode","removeChild","children","render","Component","DARK","DARK_SECONDARY","DARK_TERTIARY","DARK_ACCENT","DARK_FONT","DARK_FONT_LIGHT","StyledButton","variant","StyledWindow","open","LayoutDemo","openPreview","bind","closePreview","state","setState","propTypes","oneOf","defaultProps"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport styled from '@emotion/styled'\nimport { jsx } from '@emotion/core'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\nimport { ThemeProvider } from 'emotion-theming'\nimport theme from '../../themes/base'\n\nclass RenderInBody extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  componentDidMount() {\n    this.container = document.createElement('div')\n    document.body.appendChild(this.container)\n    this._renderLayer()\n  }\n\n  componentDidUpdate() {\n    this._renderLayer()\n  }\n\n  componentWillUnmount() {\n    ReactDOM.unmountComponentAtNode(this.container)\n    document.body.removeChild(this.container)\n  }\n\n  _renderLayer() {\n    const children = <ThemeProvider theme={theme}>{this.props.children}</ThemeProvider>\n    ReactDOM.render(children, this.container)\n  }\n\n  render() {\n    // Render a placeholder\n    return <ThemeProvider theme={theme}>\n      <div {...this.props}/>\n    </ThemeProvider>\n  }\n}\n\nconst DARK = '#13161F'\nconst DARK_SECONDARY = '#2D3747'\nconst DARK_TERTIARY = '#1D2330'\nconst DARK_ACCENT = '#EE9B3F'\nconst DARK_FONT = '#CED4DE'\nconst DARK_FONT_LIGHT = '#EEF1F5'\n\nconst StyledButton = styled('button')`\n  background: ${({ variant }) => variant === 'light' ? 'white' : DARK};\n  color: ${({ variant }) => variant === 'light' ? 'white' : DARK_FONT};\n  border: 1px dotted ${({ variant }) => variant === 'light' ? 'white' : DARK_SECONDARY};\n  padding: 1em;\n  cursor: pointer;\n  font-weight: bold;\n  &:focus {\n    outline: none;\n  }\n  &:hover, &:active {\n    color: ${({ variant }) => variant === 'light' ? 'white' : DARK_ACCENT};\n  }\n`\nconst StyledWindow = styled('div')`\n  ${({ open }) => open ? '' : 'display: none'};\n  background: ${({ variant }) => variant === 'light' ? 'white' : DARK_TERTIARY};\n  z-index: 9999999999999999;\n  position: absolute;\n  top: 0;\n  left: 0;\n  overflow-x: hidden;\n  overflow-y: scroll;\n  max-width: 100%;\n`\n\nclass LayoutDemo extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.openPreview = this.openPreview.bind(this)\n    this.closePreview = this.closePreview.bind(this)\n\n    this.state = {\n      open: false,\n    }\n  }\n\n  openPreview() {\n    this.setState(() => ({ open: true }))\n  }\n\n  closePreview() {\n    this.setState(() => ({ open: false }))\n  }\n\n  render() {\n    const { variant, children } = this.props\n    return (\n      <React.Fragment>\n        <StyledButton variant={variant} onClick={this.openPreview}>Show Layout Playground</StyledButton>\n        <RenderInBody>\n          <StyledWindow id=\"layout-window\" variant={variant} open={this.state.open}>\n            {children}\n          </StyledWindow>\n        </RenderInBody>\n      </React.Fragment>\n    )\n  }\n}\n\nLayoutDemo.propTypes = {\n  variant: PropTypes.oneOf([\n    'light',\n    'dark',\n  ]),\n}\n\nLayoutDemo.defaultProps = {\n  variant: 'light',\n}\n\nexport default LayoutDemo\n"]}]}