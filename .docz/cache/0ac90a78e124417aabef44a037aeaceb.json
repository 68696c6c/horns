{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/config/typography.js","dependencies":[{"path":"/site/src/config/typography.js","mtime":1573330658000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvc2l0ZS9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9zaXRlL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmVudGVyTW9kdWxlOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7Cgp2YXIgX19zaWduYXR1cmVfXyA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbFsiZGVmYXVsdCJdLnNpZ25hdHVyZSA6IGZ1bmN0aW9uIChhKSB7CiAgcmV0dXJuIGE7Cn07CgppbXBvcnQgeyBzYWZlR2V0VmFsdWUgfSBmcm9tICcuL3V0aWxzJzsgLy8gQFRPRE8gZ2V0IGRlZmF1bHQgdmFsdWVzIGZyb20gYSBjb25maWcgZmlsZS4KCnZhciBkZWZhdWx0VHlwb2dyYXBoeSA9IHsKICBsaW5lSGVpZ2h0OiAnMS42ZW0nLAogIGhlYWRpbmdNYXJnaW46ICcuNzVlbSAwJywKICBmYW1pbGllczogewogICAgYmFzZTogJ0hlbHZldGljYScsCiAgICBmYWxsYmFjazogJ3NhbnMtc2VyaWYnCiAgfSwKICB3ZWlnaHRzOiB7CiAgICBiYXNlOiA0MDAsCiAgICBsaWdodGVyOiAxMDAsCiAgICBsaWdodDogMjAwLAogICAgc2VtaUJvbGQ6IDYwMCwKICAgIGJvbGQ6IDcwMAogIH0sCiAgc2l6ZXM6IHsKICAgIGJhc2U6ICcxNHB4JywKICAgIHNtYWxsOiAnMC43NXJlbScsCiAgICBsYXJnZTogJzEuNXJlbScsCiAgICBtaW46ICcxMnB4JywKICAgIG1heDogJzE2cHgnLAogICAgaDE6ICczLjIxcmVtJywKICAgIGgyOiAnMi4zNnJlbScsCiAgICBoMzogJzEuNjRyZW0nLAogICAgaDQ6ICcxLjI5cmVtJywKICAgIGg1OiAnMS4xNXJlbScsCiAgICBoNjogJzFyZW0nCiAgfQp9OwoKdmFyIFR5cG9ncmFwaHlDb25maWcgPQovKiNfX1BVUkVfXyovCmZ1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBUeXBvZ3JhcGh5Q29uZmlnKCkgewogICAgdmFyIGNvbmZpZyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFR5cG9ncmFwaHlDb25maWcpOwoKICAgIHRoaXMubGluZUhlaWdodCA9IHNhZmVHZXRWYWx1ZShjb25maWcsICdsaW5lSGVpZ2h0JywgZGVmYXVsdFR5cG9ncmFwaHkubGluZUhlaWdodCk7CiAgICB0aGlzLmhlYWRpbmdNYXJnaW4gPSBzYWZlR2V0VmFsdWUoY29uZmlnLCAnaGVhZGluZ01hcmdpbicsIGRlZmF1bHRUeXBvZ3JhcGh5LmhlYWRpbmdNYXJnaW4pOwogICAgdmFyIGNmID0gc2FmZUdldFZhbHVlKGNvbmZpZywgJ2ZhbWlsaWVzJywge30pOwogICAgdGhpcy5mYW1pbGllcyA9IHsKICAgICAgYmFzZTogc2FmZUdldFZhbHVlKGNmLCAnYmFzZScsIGRlZmF1bHRUeXBvZ3JhcGh5LmZhbWlsaWVzLmJhc2UpLAogICAgICBmYWxsYmFjazogc2FmZUdldFZhbHVlKGNmLCAnZmFsbGJhY2snLCBkZWZhdWx0VHlwb2dyYXBoeS5mYW1pbGllcy5mYWxsYmFjaykKICAgIH07CiAgICB2YXIgY3cgPSBzYWZlR2V0VmFsdWUoY29uZmlnLCAnd2VpZ2h0cycsIHt9KTsKICAgIHRoaXMud2VpZ2h0cyA9IHsKICAgICAgYmFzZTogc2FmZUdldFZhbHVlKGN3LCAnYmFzZScsIGRlZmF1bHRUeXBvZ3JhcGh5LndlaWdodHMuYmFzZSksCiAgICAgIGxpZ2h0ZXI6IHNhZmVHZXRWYWx1ZShjdywgJ2xpZ2h0ZXInLCBkZWZhdWx0VHlwb2dyYXBoeS53ZWlnaHRzLmxpZ2h0ZXIpLAogICAgICBsaWdodDogc2FmZUdldFZhbHVlKGN3LCAnbGlnaHQnLCBkZWZhdWx0VHlwb2dyYXBoeS53ZWlnaHRzLmxpZ2h0KSwKICAgICAgc2VtaUJvbGQ6IHNhZmVHZXRWYWx1ZShjdywgJ3NlbWlCb2xkJywgZGVmYXVsdFR5cG9ncmFwaHkud2VpZ2h0cy5zZW1pQm9sZCksCiAgICAgIGJvbGQ6IHNhZmVHZXRWYWx1ZShjdywgJ2JvbGQnLCBkZWZhdWx0VHlwb2dyYXBoeS53ZWlnaHRzLmJvbGQpCiAgICB9OwogICAgdmFyIGNzID0gc2FmZUdldFZhbHVlKGNvbmZpZywgJ3NpemVzJywge30pOwogICAgdGhpcy5zaXplcyA9IHsKICAgICAgYmFzZTogc2FmZUdldFZhbHVlKGNzLCAnYmFzZScsIGRlZmF1bHRUeXBvZ3JhcGh5LnNpemVzLmJhc2UpLAogICAgICBzbWFsbDogc2FmZUdldFZhbHVlKGNzLCAnc21hbGwnLCBkZWZhdWx0VHlwb2dyYXBoeS5zaXplcy5zbWFsbCksCiAgICAgIGxhcmdlOiBzYWZlR2V0VmFsdWUoY3MsICdsYXJnZScsIGRlZmF1bHRUeXBvZ3JhcGh5LnNpemVzLmxhcmdlKSwKICAgICAgbWluOiBzYWZlR2V0VmFsdWUoY3MsICdtaW4nLCBkZWZhdWx0VHlwb2dyYXBoeS5zaXplcy5taW4pLAogICAgICBtYXg6IHNhZmVHZXRWYWx1ZShjcywgJ21heCcsIGRlZmF1bHRUeXBvZ3JhcGh5LnNpemVzLm1heCksCiAgICAgIGgxOiBzYWZlR2V0VmFsdWUoY3MsICdoMScsIGRlZmF1bHRUeXBvZ3JhcGh5LnNpemVzLmgxKSwKICAgICAgaDI6IHNhZmVHZXRWYWx1ZShjcywgJ2gyJywgZGVmYXVsdFR5cG9ncmFwaHkuc2l6ZXMuaDIpLAogICAgICBoMzogc2FmZUdldFZhbHVlKGNzLCAnaDMnLCBkZWZhdWx0VHlwb2dyYXBoeS5zaXplcy5oMyksCiAgICAgIGg0OiBzYWZlR2V0VmFsdWUoY3MsICdoNCcsIGRlZmF1bHRUeXBvZ3JhcGh5LnNpemVzLmg0KSwKICAgICAgaDU6IHNhZmVHZXRWYWx1ZShjcywgJ2g1JywgZGVmYXVsdFR5cG9ncmFwaHkuc2l6ZXMuaDUpLAogICAgICBoNjogc2FmZUdldFZhbHVlKGNzLCAnaDYnLCBkZWZhdWx0VHlwb2dyYXBoeS5zaXplcy5oNikKICAgIH07CiAgICBjb25zb2xlLmxvZygnVHlwb2dyYXBoeUNvbmZpZycsIHRoaXMpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFR5cG9ncmFwaHlDb25maWcsIFt7CiAgICBrZXk6ICJnZXRXZWlnaHQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldFdlaWdodCh3ZWlnaHQpIHsKICAgICAgaWYgKHRoaXMud2VpZ2h0c1t3ZWlnaHRdKSB7CiAgICAgICAgcmV0dXJuIHRoaXMud2VpZ2h0c1t3ZWlnaHRdOwogICAgICB9CgogICAgICByZXR1cm4gdGhpcy53ZWlnaHRzLmJhc2U7CiAgICB9CiAgfSwgewogICAga2V5OiAiX19yZWFjdHN0YW5kaW5fX3JlZ2VuZXJhdGVCeUV2YWwiLAogICAgLy8gQHRzLWlnbm9yZQogICAgdmFsdWU6IGZ1bmN0aW9uIF9fcmVhY3RzdGFuZGluX19yZWdlbmVyYXRlQnlFdmFsKGtleSwgY29kZSkgewogICAgICAvLyBAdHMtaWdub3JlCiAgICAgIHRoaXNba2V5XSA9IGV2YWwoY29kZSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gVHlwb2dyYXBoeUNvbmZpZzsKfSgpOwoKdmFyIF9kZWZhdWx0ID0gVHlwb2dyYXBoeUNvbmZpZzsKZXhwb3J0IGRlZmF1bHQgX2RlZmF1bHQ7CgppZiAodHlwZW9mIFR5cG9ncmFwaHlDb25maWcgIT09ICd1bmRlZmluZWQnICYmIFR5cG9ncmFwaHlDb25maWcgJiYgVHlwb2dyYXBoeUNvbmZpZyA9PT0gT2JqZWN0KFR5cG9ncmFwaHlDb25maWcpICYmIE9iamVjdC5pc0V4dGVuc2libGUoVHlwb2dyYXBoeUNvbmZpZykpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoVHlwb2dyYXBoeUNvbmZpZywgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIlR5cG9ncmFwaHlDb25maWciLAogICAgICBmaWxlbmFtZTogInNyYy9jb25maWcvdHlwb2dyYXBoeS5qcyIKICAgIH0KICB9KTsKfQoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5kZWZhdWx0OwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihkZWZhdWx0VHlwb2dyYXBoeSwgImRlZmF1bHRUeXBvZ3JhcGh5IiwgIi9zaXRlL3NyYy9jb25maWcvdHlwb2dyYXBoeS5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKFR5cG9ncmFwaHlDb25maWcsICJUeXBvZ3JhcGh5Q29uZmlnIiwgIi9zaXRlL3NyYy9jb25maWcvdHlwb2dyYXBoeS5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKF9kZWZhdWx0LCAiZGVmYXVsdCIsICIvc2l0ZS9zcmMvY29uZmlnL3R5cG9ncmFwaHkuanMiKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkubGVhdmVNb2R1bGU7CiAgbGVhdmVNb2R1bGUgJiYgbGVhdmVNb2R1bGUobW9kdWxlKTsKfSkoKTs="},{"version":3,"sources":["/site/src/config/typography.js"],"names":["safeGetValue","defaultTypography","lineHeight","headingMargin","families","base","fallback","weights","lighter","light","semiBold","bold","sizes","small","large","min","max","h1","h2","h3","h4","h5","h6","TypographyConfig","config","cf","cw","cs","console","log","weight"],"mappings":"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","sourcesContent":["import { safeGetValue } from './utils'\n\n// @TODO get default values from a config file.\nconst defaultTypography = {\n  lineHeight: '1.6em',\n  headingMargin: '.75em 0',\n  families: {\n    base: 'Helvetica',\n    fallback: 'sans-serif',\n  },\n  weights: {\n    base: 400,\n    lighter: 100,\n    light: 200,\n    semiBold: 600,\n    bold: 700,\n  },\n  sizes: {\n    base: '14px',\n    small: '0.75rem',\n    large: '1.5rem',\n    min: '12px',\n    max: '16px',\n    h1: '3.21rem',\n    h2: '2.36rem',\n    h3: '1.64rem',\n    h4: '1.29rem',\n    h5: '1.15rem',\n    h6: '1rem',\n  },\n}\n\nclass TypographyConfig {\n  constructor(config = {}) {\n    this.lineHeight = safeGetValue(config, 'lineHeight', defaultTypography.lineHeight)\n    this.headingMargin = safeGetValue(config, 'headingMargin', defaultTypography.headingMargin)\n\n    const cf = safeGetValue(config, 'families', {})\n    this.families = {\n      base: safeGetValue(cf, 'base', defaultTypography.families.base),\n      fallback: safeGetValue(cf, 'fallback', defaultTypography.families.fallback),\n    }\n\n    const cw = safeGetValue(config, 'weights', {})\n    this.weights = {\n      base: safeGetValue(cw, 'base', defaultTypography.weights.base),\n      lighter: safeGetValue(cw, 'lighter', defaultTypography.weights.lighter),\n      light: safeGetValue(cw, 'light', defaultTypography.weights.light),\n      semiBold: safeGetValue(cw, 'semiBold', defaultTypography.weights.semiBold),\n      bold: safeGetValue(cw, 'bold', defaultTypography.weights.bold),\n    }\n\n    const cs = safeGetValue(config, 'sizes', {})\n    this.sizes = {\n      base: safeGetValue(cs, 'base', defaultTypography.sizes.base),\n      small: safeGetValue(cs, 'small', defaultTypography.sizes.small),\n      large: safeGetValue(cs, 'large', defaultTypography.sizes.large),\n      min: safeGetValue(cs, 'min', defaultTypography.sizes.min),\n      max: safeGetValue(cs, 'max', defaultTypography.sizes.max),\n      h1: safeGetValue(cs, 'h1', defaultTypography.sizes.h1),\n      h2: safeGetValue(cs, 'h2', defaultTypography.sizes.h2),\n      h3: safeGetValue(cs, 'h3', defaultTypography.sizes.h3),\n      h4: safeGetValue(cs, 'h4', defaultTypography.sizes.h4),\n      h5: safeGetValue(cs, 'h5', defaultTypography.sizes.h5),\n      h6: safeGetValue(cs, 'h6', defaultTypography.sizes.h6),\n    }\n\n    console.log('TypographyConfig', this)\n  }\n\n  getWeight(weight) {\n    if (this.weights[weight]) {\n      return this.weights[weight]\n    }\n    return this.weights.base\n  }\n}\n\nexport default TypographyConfig\n"]}]}