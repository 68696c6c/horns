{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/components/lists/ordered.jsx","dependencies":[{"path":"/site/src/components/lists/ordered.jsx","mtime":1573330658000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvc2l0ZS9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgX2V4dGVuZHMgZnJvbSAiL3NpdGUvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiOwppbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIGZyb20gIi9zaXRlL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllcyI7CmltcG9ydCBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIGZyb20gIi9zaXRlL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90YWdnZWRUZW1wbGF0ZUxpdGVyYWwiOwp2YXIgX2pzeEZpbGVOYW1lID0gIi9zaXRlL3NyYy9jb21wb25lbnRzL2xpc3RzL29yZGVyZWQuanN4IjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGVudGVyTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZW50ZXJNb2R1bGU7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHsKICB2YXIgZGF0YSA9IF90YWdnZWRUZW1wbGF0ZUxpdGVyYWwoWyJcbiAgIiwgIjtcbiAgY291bnRlci1yZXNldDogIiwgIjtcbiAgPiBsaSB7XG4gICAgcGFkZGluZy1sZWZ0OiAiLCAiO1xuICAgICY6OmJlZm9yZSB7XG4gICAgICBjb3VudGVyLWluY3JlbWVudDogIiwgIjtcbiAgICAgIG1pbi13aWR0aDogIiwgIjtcbiAgICAgIG1hcmdpbi1sZWZ0OiAtIiwgIjtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIH0gIFxuICB9XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdCA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9Cgp2YXIgX19zaWduYXR1cmVfXyA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbFsiZGVmYXVsdCJdLnNpZ25hdHVyZSA6IGZ1bmN0aW9uIChhKSB7CiAgcmV0dXJuIGE7Cn07CgovKiogQGpzeCBqc3ggKi8KaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnOwppbXBvcnQgeyBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJzsKaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJzsKaW1wb3J0IGJhc2VMaXN0LCB7IENPVU5URVIsIHJlbmRlckl0ZW1zLCBUWVBFU19PUkRFUkVEIH0gZnJvbSAnLi9iYXNlJzsgLy8gQFRPRE8gdGhlIGZpeGVkIGxlZnQgcGFkZGluZyB3aWxsIG5vdCB3b3JrIHdpdGggY291bnRlcnMgZ3JlYXRlciB0aGFuIDIgZGlnaXRzLCBuZWVkIGEgc29sdXRpb24gdGhhdCBhY2NvdW50cyBmb3IgdGhlIGFjdHVhbCB3aWR0aCBvZiB0aGUgbGlzdCBjb3VudGVyLgoKdmFyIFN0eWxlZCA9IHN0eWxlZCgnb2wnKShfdGVtcGxhdGVPYmplY3QoKSwgZnVuY3Rpb24gKF9yZWYpIHsKICB2YXIgdGhlbWUgPSBfcmVmLnRoZW1lOwogIHJldHVybiBiYXNlTGlzdCh0aGVtZSk7Cn0sIENPVU5URVIsIGZ1bmN0aW9uIChfcmVmMikgewogIHZhciB0aGVtZSA9IF9yZWYyLnRoZW1lOwogIHJldHVybiB0aGVtZS5zcGFjaW5nLm1lZGl1bTsKfSwgQ09VTlRFUiwgZnVuY3Rpb24gKF9yZWYzKSB7CiAgdmFyIHRoZW1lID0gX3JlZjMudGhlbWU7CiAgcmV0dXJuIHRoZW1lLnNwYWNpbmcubWVkaXVtOwp9LCBmdW5jdGlvbiAoX3JlZjQpIHsKICB2YXIgdGhlbWUgPSBfcmVmNC50aGVtZTsKICByZXR1cm4gdGhlbWUuc3BhY2luZy5tZWRpdW07Cn0pOwoKdmFyIExpc3RPcmRlcmVkID0gZnVuY3Rpb24gTGlzdE9yZGVyZWQoX3JlZjUpIHsKICB2YXIgdHlwZSA9IF9yZWY1LnR5cGUsCiAgICAgIHZhcmlhbnQgPSBfcmVmNS52YXJpYW50LAogICAgICBjbGFzc05hbWUgPSBfcmVmNS5jbGFzc05hbWUsCiAgICAgIGNoaWxkcmVuID0gX3JlZjUuY2hpbGRyZW4sCiAgICAgIG90aGVycyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmNSwgWyJ0eXBlIiwgInZhcmlhbnQiLCAiY2xhc3NOYW1lIiwgImNoaWxkcmVuIl0pOwoKICByZXR1cm4ganN4KFN0eWxlZCwgX2V4dGVuZHMoewogICAgdmFyaWFudDogdmFyaWFudCwKICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lCiAgfSwgb3RoZXJzLCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiAyNAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0pLCByZW5kZXJJdGVtcyhjaGlsZHJlbiwgdmFyaWFudCwgdHlwZSkpOwp9OwoKTGlzdE9yZGVyZWQucHJvcFR5cGVzID0gewogIHR5cGU6IFByb3BUeXBlcy5vbmVPZihfdG9Db25zdW1hYmxlQXJyYXkoVFlQRVNfT1JERVJFRCkpLAogIHZhcmlhbnQ6IFByb3BUeXBlcy5vbmVPZihbJ3ByaW1hcnknLCAnc2Vjb25kYXJ5JywgJ3RlcnRpYXJ5JywgJ2xpZ2h0JywgJ25ldXRyYWwnLCAnZGFyaycsICdzdWNjZXNzJywgJ2luZm8nLCAnd2FybmluZycsICdkYW5nZXInLCAnY29weSddKQp9OwpMaXN0T3JkZXJlZC5kZWZhdWx0UHJvcHMgPSB7CiAgdHlwZTogJ2RlY2ltYWwnLAogIHZhcmlhbnQ6ICdjb3B5Jwp9Owp2YXIgX2RlZmF1bHQgPSBMaXN0T3JkZXJlZDsKZXhwb3J0IGRlZmF1bHQgX2RlZmF1bHQ7CgppZiAodHlwZW9mIExpc3RPcmRlcmVkICE9PSAndW5kZWZpbmVkJyAmJiBMaXN0T3JkZXJlZCAmJiBMaXN0T3JkZXJlZCA9PT0gT2JqZWN0KExpc3RPcmRlcmVkKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKExpc3RPcmRlcmVkKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShMaXN0T3JkZXJlZCwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIkxpc3RPcmRlcmVkIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvY29tcG9uZW50cy9saXN0cy9vcmRlcmVkLmpzeCIKICAgIH0KICB9KTsKfQoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5kZWZhdWx0OwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihTdHlsZWQsICJTdHlsZWQiLCAiL3NpdGUvc3JjL2NvbXBvbmVudHMvbGlzdHMvb3JkZXJlZC5qc3giKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihMaXN0T3JkZXJlZCwgIkxpc3RPcmRlcmVkIiwgIi9zaXRlL3NyYy9jb21wb25lbnRzL2xpc3RzL29yZGVyZWQuanN4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoX2RlZmF1bHQsICJkZWZhdWx0IiwgIi9zaXRlL3NyYy9jb21wb25lbnRzL2xpc3RzL29yZGVyZWQuanN4Iik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmxlYXZlTW9kdWxlOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["/site/src/components/lists/ordered.jsx"],"names":["styled","jsx","React","PropTypes","baseList","COUNTER","renderItems","TYPES_ORDERED","Styled","theme","spacing","medium","ListOrdered","type","variant","className","children","others","propTypes","oneOf","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,IAAmBC,OAAnB,EAA4BC,WAA5B,EAAyCC,aAAzC,QAA8D,QAA9D,C,CAEA;;AACA,IAAMC,MAAM,GAAGR,MAAM,CAAC,IAAD,CAAT,oBACR;AAAA,MAAGS,KAAH,QAAGA,KAAH;AAAA,SAAeL,QAAQ,CAACK,KAAD,CAAvB;AAAA,CADQ,EAEOJ,OAFP,EAIQ;AAAA,MAAGI,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,MAA7B;AAAA,CAJR,EAMeN,OANf,EAOO;AAAA,MAAGI,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,MAA7B;AAAA,CAPP,EAQU;AAAA,MAAGF,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,MAA7B;AAAA,CARV,CAAZ;;AAcA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGC,IAAH,SAAGA,IAAH;AAAA,MAASC,OAAT,SAASA,OAAT;AAAA,MAAkBC,SAAlB,SAAkBA,SAAlB;AAAA,MAA6BC,QAA7B,SAA6BA,QAA7B;AAAA,MAA0CC,MAA1C;;AAAA,SAClB,IAAC,MAAD;AAAQ,IAAA,OAAO,EAAEH,OAAjB;AAA0B,IAAA,SAAS,EAAEC;AAArC,KAAoDE,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA6DX,WAAW,CAACU,QAAD,EAAWF,OAAX,EAAoBD,IAApB,CAAxE,CADkB;AAAA,CAApB;;AAIAD,WAAW,CAACM,SAAZ,GAAwB;AACtBL,EAAAA,IAAI,EAAEV,SAAS,CAACgB,KAAV,oBACDZ,aADC,EADgB;AAItBO,EAAAA,OAAO,EAAEX,SAAS,CAACgB,KAAV,CAAgB,CACvB,SADuB,EAEvB,WAFuB,EAGvB,UAHuB,EAIvB,OAJuB,EAKvB,SALuB,EAMvB,MANuB,EAOvB,SAPuB,EAQvB,MARuB,EASvB,SATuB,EAUvB,QAVuB,EAWvB,MAXuB,CAAhB;AAJa,CAAxB;AAmBAP,WAAW,CAACQ,YAAZ,GAA2B;AACzBP,EAAAA,IAAI,EAAE,SADmB;AAEzBC,EAAAA,OAAO,EAAE;AAFgB,CAA3B;eAKeF,W;AAAf;;;;;;;;;;;;;;;;;;;;;;0BA1CMJ,M;0BAcAI,W","sourcesContent":["/** @jsx jsx */\nimport styled from '@emotion/styled'\nimport { jsx } from '@emotion/core'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport baseList, { COUNTER, renderItems, TYPES_ORDERED } from './base'\n\n// @TODO the fixed left padding will not work with counters greater than 2 digits, need a solution that accounts for the actual width of the list counter.\nconst Styled = styled('ol')`\n  ${({ theme }) => baseList(theme)};\n  counter-reset: ${COUNTER};\n  > li {\n    padding-left: ${({ theme }) => theme.spacing.medium};\n    &::before {\n      counter-increment: ${COUNTER};\n      min-width: ${({ theme }) => theme.spacing.medium};\n      margin-left: -${({ theme }) => theme.spacing.medium};\n      text-align: right;\n    }  \n  }\n`\n\nconst ListOrdered = ({ type, variant, className, children, ...others }) => (\n  <Styled variant={variant} className={className} {...others}>{renderItems(children, variant, type)}</Styled>\n)\n\nListOrdered.propTypes = {\n  type: PropTypes.oneOf([\n    ...TYPES_ORDERED,\n  ]),\n  variant: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'tertiary',\n    'light',\n    'neutral',\n    'dark',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'copy',\n  ]),\n}\n\nListOrdered.defaultProps = {\n  type: 'decimal',\n  variant: 'copy',\n}\n\nexport default ListOrdered\n"]}]}