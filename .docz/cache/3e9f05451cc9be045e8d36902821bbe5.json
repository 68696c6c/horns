{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/config/links.js","dependencies":[{"path":"/site/src/config/links.js","mtime":1573330658000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvc2l0ZS9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9zaXRlL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmVudGVyTW9kdWxlOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7Cgp2YXIgX19zaWduYXR1cmVfXyA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbFsiZGVmYXVsdCJdLnNpZ25hdHVyZSA6IGZ1bmN0aW9uIChhKSB7CiAgcmV0dXJuIGE7Cn07CgovKiBlc2xpbnQtZGlzYWJsZSBwcmVmZXItZGVzdHJ1Y3R1cmluZyAqLwppbXBvcnQgQ29sb3JzQ29uZmlnIGZyb20gJy4vY29sb3JzJzsKaW1wb3J0IHsgcGFsbGV0Q29sb3JzIH0gZnJvbSAnLi9jb2xvci1wYWxsZXQnOwppbXBvcnQgeyBzYWZlR2V0VmFsdWUgfSBmcm9tICcuL3V0aWxzJzsgLy8gQFRPRE8gZ2V0IGRlZmF1bHQgdmFsdWVzIGZyb20gYSBjb25maWcgZmlsZS4KCnZhciBkZWZhdWx0TGlua3MgPSB7CiAgLy8gRGVmYXVsdCBsaW5rIGNvbG9ycyBhcmUgb25seSBpbmNsdWRlZCBoZXJlIGFzIGEgcmVmZXJlbmNlLgogIC8vIFRoZSBDb2xvcnNDb25maWcgd2lsbCBiZSB1c2VkIGZvciBhY3R1YWwgZGVmYXVsdCB2YWx1ZXMuCiAgY29sb3JzOiB7CiAgICBiYXNlOiAnY29weScsCiAgICBhY3RpdmU6ICdwcmltYXJ5JywKICAgIGhvdmVyOiAnc2Vjb25kYXJ5JwogIH0sCiAgZGVjb3JhdGlvbnM6IHsKICAgIGJhc2U6ICdub25lJywKICAgIGFjdGl2ZTogJ25vbmUnLAogICAgaG92ZXI6ICdub25lJwogIH0KfTsKCnZhciBtYWtlTGluayA9IGZ1bmN0aW9uIG1ha2VMaW5rKGNvbG9ycywgZGVjb3JhdGlvbnMpIHsKICByZXR1cm4gewogICAgY29sb3I6IGNvbG9ycy5iYXNlLAogICAgZGVjb3JhdGlvbjogZGVjb3JhdGlvbnMuYmFzZSwKICAgIGhvdmVyOiB7CiAgICAgIGNvbG9yOiBjb2xvcnMuaG92ZXIsCiAgICAgIGRlY29yYXRpb246IGRlY29yYXRpb25zLmhvdmVyCiAgICB9LAogICAgYWN0aXZlOiB7CiAgICAgIGNvbG9yOiBjb2xvcnMuYWN0aXZlLAogICAgICBkZWNvcmF0aW9uOiBkZWNvcmF0aW9ucy5hY3RpdmUKICAgIH0KICB9Owp9OwoKdmFyIExpbmtzQ29uZmlnID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gTGlua3NDb25maWcoY29sb3JzQ29uZmlnKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHZhciBjb25maWcgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9OwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMaW5rc0NvbmZpZyk7CgogICAgaWYgKCEoY29sb3JzQ29uZmlnIGluc3RhbmNlb2YgQ29sb3JzQ29uZmlnKSkgewogICAgICB0aHJvdyBuZXcgRXJyb3IoJ0xpbmtzQ29uZmlnOiBpbnZhbGlkIENvbG9yc0NvbmZpZycpOwogICAgfQoKICAgIHZhciBjb2xvciA9IGNvbG9yc0NvbmZpZy5jb3B5LnByaW1hcnk7CiAgICB2YXIgaENvbG9yID0gY29sb3JzQ29uZmlnLmhvdmVyOwogICAgdmFyIGFDb2xvciA9IGNvbG9yc0NvbmZpZy5hY3RpdmU7CiAgICB2YXIgY29uZmlnQ29sb3JzID0gc2FmZUdldFZhbHVlKGNvbmZpZywgJ2NvbG9ycycsIHt9KTsKICAgIHZhciBjb25maWdDb2xvciA9IHNhZmVHZXRWYWx1ZShjb25maWdDb2xvcnMsICdiYXNlJywgJycpOwoKICAgIGlmIChjb25maWdDb2xvcikgewogICAgICBjb2xvciA9IGNvbG9yc0NvbmZpZy5nZXRTd2F0Y2goY29uZmlnQ29sb3IpOwogICAgfQoKICAgIHZhciBjb25maWdIQ29sb3IgPSBzYWZlR2V0VmFsdWUoY29uZmlnQ29sb3JzLCAnaG92ZXInLCAnJyk7CgogICAgaWYgKGNvbmZpZ0hDb2xvcikgewogICAgICBoQ29sb3IgPSBjb2xvcnNDb25maWcuZ2V0U3dhdGNoKGNvbmZpZ0hDb2xvcik7CiAgICB9CgogICAgdmFyIGNvbmZpZ0FDb2xvciA9IHNhZmVHZXRWYWx1ZShjb25maWdDb2xvcnMsICdhY3RpdmUnLCAnJyk7CgogICAgaWYgKGNvbmZpZ0FDb2xvcikgewogICAgICBhQ29sb3IgPSBjb2xvcnNDb25maWcuZ2V0U3dhdGNoKGNvbmZpZ0FDb2xvcik7CiAgICB9CgogICAgdmFyIGNvbG9ycyA9IHsKICAgICAgYmFzZTogY29sb3IsCiAgICAgIGhvdmVyOiBoQ29sb3IsCiAgICAgIGFjdGl2ZTogYUNvbG9yCiAgICB9OwogICAgdmFyIGNkID0gc2FmZUdldFZhbHVlKGNvbmZpZywgJ2RlY29yYXRpb25zJywgZGVmYXVsdExpbmtzLmRlY29yYXRpb25zKTsKICAgIHZhciBkZWNvcmF0aW9ucyA9IHsKICAgICAgYmFzZTogc2FmZUdldFZhbHVlKGNkLCAnYmFzZScsIGRlZmF1bHRMaW5rcy5kZWNvcmF0aW9ucy5iYXNlKSwKICAgICAgaG92ZXI6IHNhZmVHZXRWYWx1ZShjZCwgJ2hvdmVyJywgZGVmYXVsdExpbmtzLmRlY29yYXRpb25zLmhvdmVyKSwKICAgICAgYWN0aXZlOiBzYWZlR2V0VmFsdWUoY2QsICdhY3RpdmUnLCBkZWZhdWx0TGlua3MuZGVjb3JhdGlvbnMuYWN0aXZlKSAvLyBEZWZhdWx0IGxpbmsgc3R5bGUuCgogICAgfTsKICAgIHRoaXMuY29weSA9IG1ha2VMaW5rKGNvbG9ycywgZGVjb3JhdGlvbnMpOyAvLyBUaGVtZWQgbGluayBzdHlsZXMuCgogICAgdmFyIGhTaGFkZSA9ICdkYXJrJzsKICAgIHZhciBhU2hhZGUgPSAnZGFya2VyJzsKCiAgICBpZiAoY29sb3JzQ29uZmlnLmRhcmtNb2RlKCkpIHsKICAgICAgaFNoYWRlID0gJ2xpZ2h0JzsKICAgICAgYVNoYWRlID0gJ2xpZ2h0ZXInOwogICAgfQoKICAgIHRoaXMuY29sb3J3YXlzID0ge307CiAgICBwYWxsZXRDb2xvcnMuZm9yRWFjaChmdW5jdGlvbiAocGFsbGV0Q29sb3IpIHsKICAgICAgdmFyIGMgPSB7CiAgICAgICAgYmFzZTogY29sb3JzQ29uZmlnLmdldFN3YXRjaCgiIi5jb25jYXQocGFsbGV0Q29sb3IsICItYmFzZS1iYXNlIikpLAogICAgICAgIGhvdmVyOiBjb2xvcnNDb25maWcuZ2V0U3dhdGNoKCIiLmNvbmNhdChwYWxsZXRDb2xvciwgIi0iKS5jb25jYXQoaFNoYWRlLCAiLWJhc2UiKSksCiAgICAgICAgYWN0aXZlOiBjb2xvcnNDb25maWcuZ2V0U3dhdGNoKCIiLmNvbmNhdChwYWxsZXRDb2xvciwgIi0iKS5jb25jYXQoYVNoYWRlLCAiLWJhc2UiKSkKICAgICAgfTsKICAgICAgX3RoaXMuY29sb3J3YXlzW3BhbGxldENvbG9yXSA9IG1ha2VMaW5rKGMsIGRlY29yYXRpb25zKTsKICAgIH0pOwogICAgY29uc29sZS5sb2coJ0xpbmtzQ29uZmlnJywgdGhpcyk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoTGlua3NDb25maWcsIFt7CiAgICBrZXk6ICJfX3JlYWN0c3RhbmRpbl9fcmVnZW5lcmF0ZUJ5RXZhbCIsCiAgICAvLyBAdHMtaWdub3JlCiAgICB2YWx1ZTogZnVuY3Rpb24gX19yZWFjdHN0YW5kaW5fX3JlZ2VuZXJhdGVCeUV2YWwoa2V5LCBjb2RlKSB7CiAgICAgIC8vIEB0cy1pZ25vcmUKICAgICAgdGhpc1trZXldID0gZXZhbChjb2RlKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBMaW5rc0NvbmZpZzsKfSgpOwoKdmFyIF9kZWZhdWx0ID0gTGlua3NDb25maWc7CmV4cG9ydCBkZWZhdWx0IF9kZWZhdWx0OwoKaWYgKHR5cGVvZiBMaW5rc0NvbmZpZyAhPT0gJ3VuZGVmaW5lZCcgJiYgTGlua3NDb25maWcgJiYgTGlua3NDb25maWcgPT09IE9iamVjdChMaW5rc0NvbmZpZykgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShMaW5rc0NvbmZpZykpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTGlua3NDb25maWcsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJMaW5rc0NvbmZpZyIsCiAgICAgIGZpbGVuYW1lOiAic3JjL2NvbmZpZy9saW5rcy5qcyIKICAgIH0KICB9KTsKfQoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5kZWZhdWx0OwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihkZWZhdWx0TGlua3MsICJkZWZhdWx0TGlua3MiLCAiL3NpdGUvc3JjL2NvbmZpZy9saW5rcy5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKG1ha2VMaW5rLCAibWFrZUxpbmsiLCAiL3NpdGUvc3JjL2NvbmZpZy9saW5rcy5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKExpbmtzQ29uZmlnLCAiTGlua3NDb25maWciLCAiL3NpdGUvc3JjL2NvbmZpZy9saW5rcy5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKF9kZWZhdWx0LCAiZGVmYXVsdCIsICIvc2l0ZS9zcmMvY29uZmlnL2xpbmtzLmpzIik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmxlYXZlTW9kdWxlOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["/site/src/config/links.js"],"names":["ColorsConfig","palletColors","safeGetValue","defaultLinks","colors","base","active","hover","decorations","makeLink","color","decoration","LinksConfig","colorsConfig","config","Error","copy","primary","hColor","aColor","configColors","configColor","getSwatch","configHColor","configAColor","cd","hShade","aShade","darkMode","colorways","forEach","palletColor","c","console","log"],"mappings":"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","sourcesContent":["/* eslint-disable prefer-destructuring */\nimport ColorsConfig from './colors'\nimport { palletColors } from './color-pallet'\nimport { safeGetValue } from './utils'\n\n// @TODO get default values from a config file.\nconst defaultLinks = {\n  // Default link colors are only included here as a reference.\n  // The ColorsConfig will be used for actual default values.\n  colors: {\n    base: 'copy',\n    active: 'primary',\n    hover: 'secondary',\n  },\n  decorations: {\n    base: 'none',\n    active: 'none',\n    hover: 'none',\n  },\n}\n\nconst makeLink = (colors, decorations) => {\n  return {\n    color: colors.base,\n    decoration: decorations.base,\n    hover: {\n      color: colors.hover,\n      decoration: decorations.hover,\n    },\n    active: {\n      color: colors.active,\n      decoration: decorations.active,\n    },\n  }\n}\n\nclass LinksConfig {\n  constructor(colorsConfig, config = {}) {\n    if (!(colorsConfig instanceof ColorsConfig)) {\n      throw new Error('LinksConfig: invalid ColorsConfig')\n    }\n\n    let color = colorsConfig.copy.primary\n    let hColor = colorsConfig.hover\n    let aColor = colorsConfig.active\n    const configColors = safeGetValue(config, 'colors', {})\n\n    const configColor = safeGetValue(configColors, 'base', '')\n    if (configColor) {\n      color = colorsConfig.getSwatch(configColor)\n    }\n\n    const configHColor = safeGetValue(configColors, 'hover', '')\n    if (configHColor) {\n      hColor = colorsConfig.getSwatch(configHColor)\n    }\n\n    const configAColor = safeGetValue(configColors, 'active', '')\n    if (configAColor) {\n      aColor = colorsConfig.getSwatch(configAColor)\n    }\n\n    const colors = {\n      base: color,\n      hover: hColor,\n      active: aColor,\n    }\n\n    const cd = safeGetValue(config, 'decorations', defaultLinks.decorations)\n    const decorations = {\n      base: safeGetValue(cd, 'base', defaultLinks.decorations.base),\n      hover: safeGetValue(cd, 'hover', defaultLinks.decorations.hover),\n      active: safeGetValue(cd, 'active', defaultLinks.decorations.active),\n    }\n\n    // Default link style.\n    this.copy = makeLink(colors, decorations)\n\n    // Themed link styles.\n    let hShade = 'dark'\n    let aShade = 'darker'\n    if (colorsConfig.darkMode()) {\n      hShade = 'light'\n      aShade = 'lighter'\n    }\n    this.colorways = {}\n    palletColors.forEach(palletColor => {\n      const c = {\n        base: colorsConfig.getSwatch(`${palletColor}-base-base`),\n        hover: colorsConfig.getSwatch(`${palletColor}-${hShade}-base`),\n        active: colorsConfig.getSwatch(`${palletColor}-${aShade}-base`),\n      }\n      this.colorways[palletColor] = makeLink(c, decorations)\n    })\n\n    console.log('LinksConfig', this)\n  }\n}\n\nexport default LinksConfig\n"]}]}