{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/utils/utils.js","dependencies":[{"path":"/site/src/utils/utils.js","mtime":1573330658000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/site/src/utils/utils.js"],"names":["ENV_DEV","ENV_PROD","isEmptyObject","obj","Object","keys","length","constructor","isUndefined","val","formatDate","dateString","date","Date","parse","options","year","month","day","toLocaleDateString","isArray","arr","Array","isNumber","v","toNumber","Number","replace","numberToCurrency","value","toFixed","arrayRemoveByValue","index","indexOf","splice","debounce","fn","delay","timer","context","args","arguments","clearTimeout","setTimeout","apply","debounceFirst","now","getParentByClassName","element","className","parentElement","classList","contains","valueToInt","cssVal"],"mappings":"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","sourcesContent":["export const ENV_DEV = 'DEV'\nexport const ENV_PROD = 'PROD'\n\nexport const isEmptyObject = obj => {\n  return Object.keys(obj).length === 0 && obj.constructor === Object\n}\n\nexport const isUndefined = val => {\n  return typeof val === 'undefined'\n}\n\nexport const formatDate = dateString => {\n  const date = new Date(Date.parse(dateString))\n  const options = {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  }\n  return date.toLocaleDateString('en-US', options)\n}\n\nexport const isArray = arr => {\n  return arr.constructor === Array\n}\n\nexport const isNumber = v => typeof v === 'number'\n\nexport const toNumber = v =>\n  isNumber(v) ? v : Number(v.replace(/[^0-9.-]+/g, ''))\n\nexport const numberToCurrency = value => {\n  if (isUndefined(value)) {\n    return '$0.00'\n  }\n  // Round the number to a two decimal places and convert it to a string, then add commas to it.\n  const replace = v => v.toFixed(2).replace(/\\d(?=(\\d{3})+\\.)/g, '$&,')\n  if (value < 0) {\n    const val = -1 * value\n    return `-$${replace(val)}`\n  }\n  return `$${replace(value)}`\n}\n\nexport const arrayRemoveByValue = (arr, value) => {\n  const index = arr.indexOf(value)\n  if (index > -1) {\n    arr.splice(index, 1)\n  }\n  return arr\n}\n\n// Debounce a function call.\nexport const debounce = (fn, delay) => {\n  let timer = null\n  return function () {\n    let context = this, args = arguments\n    clearTimeout(timer)\n    timer = setTimeout(function () {\n      fn.apply(context, args)\n    }, delay)\n  }\n}\n\n// Run a function first before debouncing any additional calls.\nexport const debounceFirst = (fn, delay) => {\n  let timer = 0\n  return function () {\n    let context = this, args = arguments\n    if ((timer + delay - Date.now()) < 0) {\n      fn.apply(context, args)\n      timer = Date.now();\n    }\n  }\n}\n\nexport const getParentByClassName = (element, className) => {\n  do {\n    element = element.parentElement\n  } while (element !== null && !element.classList.contains(className))\n  return element\n}\n\n/**\n * Return a CSS property value as a unit-less integer.\n * @param cssVal\n * @returns {*}\n */\nexport const valueToInt = cssVal => {\n  return cssVal\n    .replace('px', '')\n    .replace('rem', '')\n    .replace('em', '')\n    .replace('vw', '')\n    .replace('vh', '')\n}\n"]}]}