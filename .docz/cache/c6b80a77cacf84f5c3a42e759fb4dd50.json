{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/utils/validation.js","dependencies":[{"path":"/site/src/utils/validation.js","mtime":1573330613000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvc2l0ZS9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIi9zaXRlL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiL3NpdGUvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGVudGVyTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZW50ZXJNb2R1bGU7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsWyJkZWZhdWx0Il0uc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCi8vIFNpbXBsZSBmb3JtIHZhbGlkYXRpb24gY2xhc3MuCmV4cG9ydCB2YXIgVmFsaWRhdG9yID0KLyojX19QVVJFX18qLwpmdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gVmFsaWRhdG9yKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFZhbGlkYXRvcik7CgogICAgdGhpcy5PUEVSQVRPUl9BTkQgPSAnQU5EJzsKICAgIHRoaXMuT1BFUkFUT1JfT1IgPSAnT1InOwogICAgdGhpcy5PUEVSQVRPUl9OT1QgPSAnTk9UJzsKICB9CgogIF9jcmVhdGVDbGFzcyhWYWxpZGF0b3IsIFt7CiAgICBrZXk6ICJpc0ZpZWxkVmFsaWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGlzRmllbGRWYWxpZChmaWVsZCkgewogICAgICByZXR1cm4gIShmaWVsZC5yZXF1aXJlZCAmJiAodHlwZW9mIGZpZWxkLnZhbHVlID09PSAndW5kZWZpbmVkJyB8fCBmaWVsZC52YWx1ZSA9PT0gJycpKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJtYWtlRmllbGQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG1ha2VGaWVsZChyZXF1aXJlZCkgewogICAgICB2YXIgdmFsdWUgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6ICcnOwogICAgICByZXR1cm4gewogICAgICAgIHJlcXVpcmVkOiByZXF1aXJlZCwKICAgICAgICB2YWx1ZTogdmFsdWUsCiAgICAgICAgaGFzRXJyb3I6IGZhbHNlCiAgICAgIH07CiAgICB9CiAgfSwgewogICAga2V5OiAibWFrZUZpZWxkQXJyYXkiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG1ha2VGaWVsZEFycmF5KGZpZWxkcykgewogICAgICByZXR1cm4gW2ZpZWxkc107CiAgICB9CiAgfSwgewogICAga2V5OiAibWFrZVJ1bGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG1ha2VSdWxlKGZpZWxkLCB2YWx1ZSwgY29uZGl0aW9uKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgZmllbGQ6IGZpZWxkLAogICAgICAgIHZhbHVlOiB2YWx1ZSwKICAgICAgICBjb25kaXRpb246IGNvbmRpdGlvbgogICAgICB9OwogICAgfQogIH0sIHsKICAgIGtleTogIm1ha2VDb25kaXRpb24iLAogICAgdmFsdWU6IGZ1bmN0aW9uIG1ha2VDb25kaXRpb24ob3BlcmF0b3IsIGZpZWxkcykgewogICAgICByZXR1cm4gewogICAgICAgIG9wZXJhdG9yOiBvcGVyYXRvciwKICAgICAgICBmaWVsZHM6IGZpZWxkcwogICAgICB9OwogICAgfQogIH0sIHsKICAgIGtleTogImFsbE9mIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBhbGxPZigpIHsKICAgICAgdmFyIGZpZWxkcyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogW107CiAgICAgIHJldHVybiB0aGlzLm1ha2VDb25kaXRpb24odGhpcy5PUEVSQVRPUl9BTkQsIGZpZWxkcyk7CiAgICB9CiAgfSwgewogICAga2V5OiAib25lT2YiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG9uZU9mKCkgewogICAgICB2YXIgZmllbGRzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBbXTsKICAgICAgcmV0dXJuIHRoaXMubWFrZUNvbmRpdGlvbih0aGlzLk9QRVJBVE9SX09SLCBmaWVsZHMpOwogICAgfQogIH0sIHsKICAgIGtleTogIm5vbmVPZiIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbm9uZU9mKCkgewogICAgICB2YXIgZmllbGRzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBbXTsKICAgICAgcmV0dXJuIHRoaXMubWFrZUNvbmRpdGlvbih0aGlzLk9QRVJBVE9SX05PVCwgZmllbGRzKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJydWxlUmVxdWlyZUFsbCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcnVsZVJlcXVpcmVBbGwoZmllbGQsIHZhbHVlKSB7CiAgICAgIHZhciByZXF1aXJlZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAyICYmIGFyZ3VtZW50c1syXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzJdIDogW107CiAgICAgIHJldHVybiB0aGlzLm1ha2VSdWxlKGZpZWxkLCB2YWx1ZSwgdGhpcy5hbGxPZi5hcHBseSh0aGlzLCBfdG9Db25zdW1hYmxlQXJyYXkocmVxdWlyZWQpKSk7CiAgICB9CiAgfSwgewogICAga2V5OiAicnVsZVJlcXVpcmVPbmUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHJ1bGVSZXF1aXJlT25lKGZpZWxkLCB2YWx1ZSkgewogICAgICB2YXIgcmVxdWlyZWQgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IFtdOwogICAgICByZXR1cm4gdGhpcy5tYWtlUnVsZShmaWVsZCwgdmFsdWUsIHRoaXMub25lT2YuYXBwbHkodGhpcywgX3RvQ29uc3VtYWJsZUFycmF5KHJlcXVpcmVkKSkpOwogICAgfQogIH0sIHsKICAgIGtleTogIl9fcmVhY3RzdGFuZGluX19yZWdlbmVyYXRlQnlFdmFsIiwKICAgIC8vIEB0cy1pZ25vcmUKICAgIHZhbHVlOiBmdW5jdGlvbiBfX3JlYWN0c3RhbmRpbl9fcmVnZW5lcmF0ZUJ5RXZhbChrZXksIGNvZGUpIHsKICAgICAgLy8gQHRzLWlnbm9yZQogICAgICB0aGlzW2tleV0gPSBldmFsKGNvZGUpOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFZhbGlkYXRvcjsKfSgpOwoKaWYgKHR5cGVvZiBWYWxpZGF0b3IgIT09ICd1bmRlZmluZWQnICYmIFZhbGlkYXRvciAmJiBWYWxpZGF0b3IgPT09IE9iamVjdChWYWxpZGF0b3IpICYmIE9iamVjdC5pc0V4dGVuc2libGUoVmFsaWRhdG9yKSkgewogIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShWYWxpZGF0b3IsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJWYWxpZGF0b3IiLAogICAgICBmaWxlbmFtZTogInNyYy91dGlscy92YWxpZGF0aW9uLmpzIgogICAgfQogIH0pOwp9CgpleHBvcnQgZnVuY3Rpb24gZ2V0VmFsaWRhdG9yKCkgewogIHJldHVybiBuZXcgVmFsaWRhdG9yKCk7Cn0KCmlmICh0eXBlb2YgZ2V0VmFsaWRhdG9yICE9PSAndW5kZWZpbmVkJyAmJiBnZXRWYWxpZGF0b3IgJiYgZ2V0VmFsaWRhdG9yID09PSBPYmplY3QoZ2V0VmFsaWRhdG9yKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKGdldFZhbGlkYXRvcikpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZ2V0VmFsaWRhdG9yLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiZ2V0VmFsaWRhdG9yIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvdXRpbHMvdmFsaWRhdGlvbi5qcyIKICAgIH0KICB9KTsKfQoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5kZWZhdWx0OwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihWYWxpZGF0b3IsICJWYWxpZGF0b3IiLCAiL3NpdGUvc3JjL3V0aWxzL3ZhbGlkYXRpb24uanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihnZXRWYWxpZGF0b3IsICJnZXRWYWxpZGF0b3IiLCAiL3NpdGUvc3JjL3V0aWxzL3ZhbGlkYXRpb24uanMiKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkubGVhdmVNb2R1bGU7CiAgbGVhdmVNb2R1bGUgJiYgbGVhdmVNb2R1bGUobW9kdWxlKTsKfSkoKTs="},{"version":3,"sources":["/site/src/utils/validation.js"],"names":["Validator","OPERATOR_AND","OPERATOR_OR","OPERATOR_NOT","field","required","value","hasError","fields","condition","operator","makeCondition","makeRule","allOf","oneOf","getValidator"],"mappings":";;;;;;;;;;;;;AAAA;AACA,WAAaA,SAAb;AAAA;AAAA;AACE,uBAAc;AAAA;;AACZ,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,WAAL,GAAmB,IAAnB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACD;;AALH;AAAA;AAAA,iCAOeC,KAPf,EAOsB;AAClB,aAAO,EAAEA,KAAK,CAACC,QAAN,KAAmB,OAAOD,KAAK,CAACE,KAAb,KAAuB,WAAvB,IAAsCF,KAAK,CAACE,KAAN,KAAgB,EAAzE,CAAF,CAAP;AACD;AATH;AAAA;AAAA,8BAWYD,QAXZ,EAWkC;AAAA,UAAZC,KAAY,uEAAJ,EAAI;AAC9B,aAAO;AACLD,QAAAA,QAAQ,EAARA,QADK;AAELC,QAAAA,KAAK,EAALA,KAFK;AAGLC,QAAAA,QAAQ,EAAE;AAHL,OAAP;AAKD;AAjBH;AAAA;AAAA,mCAmBiBC,MAnBjB,EAmByB;AACrB,aAAO,CAACA,MAAD,CAAP;AACD;AArBH;AAAA;AAAA,6BAuBWJ,KAvBX,EAuBkBE,KAvBlB,EAuByBG,SAvBzB,EAuBoC;AAChC,aAAO;AACLL,QAAAA,KAAK,EAALA,KADK;AAELE,QAAAA,KAAK,EAALA,KAFK;AAGLG,QAAAA,SAAS,EAATA;AAHK,OAAP;AAKD;AA7BH;AAAA;AAAA,kCA+BgBC,QA/BhB,EA+B0BF,MA/B1B,EA+BkC;AAC9B,aAAO;AACLE,QAAAA,QAAQ,EAARA,QADK;AAELF,QAAAA,MAAM,EAANA;AAFK,OAAP;AAID;AApCH;AAAA;AAAA,4BAsCqB;AAAA,UAAbA,MAAa,uEAAJ,EAAI;AACjB,aAAO,KAAKG,aAAL,CAAmB,KAAKV,YAAxB,EAAsCO,MAAtC,CAAP;AACD;AAxCH;AAAA;AAAA,4BA0CqB;AAAA,UAAbA,MAAa,uEAAJ,EAAI;AACjB,aAAO,KAAKG,aAAL,CAAmB,KAAKT,WAAxB,EAAqCM,MAArC,CAAP;AACD;AA5CH;AAAA;AAAA,6BA8CsB;AAAA,UAAbA,MAAa,uEAAJ,EAAI;AAClB,aAAO,KAAKG,aAAL,CAAmB,KAAKR,YAAxB,EAAsCK,MAAtC,CAAP;AACD;AAhDH;AAAA;AAAA,mCAkDiBJ,KAlDjB,EAkDwBE,KAlDxB,EAkD8C;AAAA,UAAfD,QAAe,uEAAJ,EAAI;AAC1C,aAAO,KAAKO,QAAL,CAAcR,KAAd,EAAqBE,KAArB,EAA4B,KAAKO,KAAL,gCAAcR,QAAd,EAA5B,CAAP;AACD;AApDH;AAAA;AAAA,mCAsDiBD,KAtDjB,EAsDwBE,KAtDxB,EAsD8C;AAAA,UAAfD,QAAe,uEAAJ,EAAI;AAC1C,aAAO,KAAKO,QAAL,CAAcR,KAAd,EAAqBE,KAArB,EAA4B,KAAKQ,KAAL,gCAAcT,QAAd,EAA5B,CAAP;AACD;AAxDH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;AA2DA,OAAO,SAASU,YAAT,GAAwB;AAC7B,SAAO,IAAIf,SAAJ,EAAP;AACD;;;;;;;;;;;;;;;;;;;;;;0BA7DYA,S;0BA2DGe,Y","sourcesContent":["// Simple form validation class.\nexport class Validator {\n  constructor() {\n    this.OPERATOR_AND = 'AND'\n    this.OPERATOR_OR = 'OR'\n    this.OPERATOR_NOT = 'NOT'\n  }\n\n  isFieldValid(field) {\n    return !(field.required && (typeof field.value === 'undefined' || field.value === ''))\n  }\n\n  makeField(required, value = '') {\n    return {\n      required,\n      value,\n      hasError: false,\n    }\n  }\n\n  makeFieldArray(fields) {\n    return [fields]\n  }\n\n  makeRule(field, value, condition) {\n    return {\n      field,\n      value,\n      condition,\n    }\n  }\n\n  makeCondition(operator, fields) {\n    return {\n      operator,\n      fields,\n    }\n  }\n\n  allOf(fields = []) {\n    return this.makeCondition(this.OPERATOR_AND, fields)\n  }\n\n  oneOf(fields = []) {\n    return this.makeCondition(this.OPERATOR_OR, fields)\n  }\n\n  noneOf(fields = []) {\n    return this.makeCondition(this.OPERATOR_NOT, fields)\n  }\n\n  ruleRequireAll(field, value, required = []) {\n    return this.makeRule(field, value, this.allOf(...required))\n  }\n\n  ruleRequireOne(field, value, required = []) {\n    return this.makeRule(field, value, this.oneOf(...required))\n  }\n}\n\nexport function getValidator() {\n  return new Validator()\n}\n"]}]}