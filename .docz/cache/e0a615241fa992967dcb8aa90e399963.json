{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/components/layout/scroll-progress.jsx","dependencies":[{"path":"/site/src/components/layout/scroll-progress.jsx","mtime":1573330658000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20gIi9zaXRlL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjsKaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICIvc2l0ZS9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOwppbXBvcnQgX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCBmcm9tICIvc2l0ZS9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIjsKdmFyIF9qc3hGaWxlTmFtZSA9ICIvc2l0ZS9zcmMvY29tcG9uZW50cy9sYXlvdXQvc2Nyb2xsLXByb2dyZXNzLmpzeCI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmVudGVyTW9kdWxlOwogIGVudGVyTW9kdWxlICYmIGVudGVyTW9kdWxlKG1vZHVsZSk7Cn0pKCk7CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3Q0KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICA+ICoge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgfVxuIl0pOwoKICBfdGVtcGxhdGVPYmplY3Q0ID0gZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0NCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9CgpmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QzKCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBiYWNrZ3JvdW5kOiAiLCAiO1xuICBoZWlnaHQ6IDEwcHg7XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdDMgPSBmdW5jdGlvbiBfdGVtcGxhdGVPYmplY3QzKCkgewogICAgcmV0dXJuIGRhdGE7CiAgfTsKCiAgcmV0dXJuIGRhdGE7Cn0KCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDIoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gIGJhY2tncm91bmQ6ICIsICI7XG4gIGhlaWdodDogMTBweDtcbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0MiA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDIoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMDtcbiAgd2lkdGg6IDEwMCU7XG4gICIsICI7XG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdCA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9Cgp2YXIgX19zaWduYXR1cmVfXyA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbFsiZGVmYXVsdCJdLnNpZ25hdHVyZSA6IGZ1bmN0aW9uIChhKSB7CiAgcmV0dXJuIGE7Cn07CgovKiogQGpzeCBqc3ggKi8KaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnOwppbXBvcnQgeyBqc3ggfSBmcm9tICdAZW1vdGlvbi9jb3JlJzsKaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJzsKaW1wb3J0IE92ZXJTY3JvbGwgZnJvbSAnZ2F0c2J5LW92ZXItc2Nyb2xsJzsKaW1wb3J0IHsgcmdiIH0gZnJvbSAnLi4vLi4vdGhlbWVzL3V0aWxzJzsKdmFyIFNjcm9sbFByb2dyZXNzQmFyQ29udGFpbmVyID0gc3R5bGVkKCdkaXYnKShfdGVtcGxhdGVPYmplY3QoKSwgZnVuY3Rpb24gKF9yZWYpIHsKICB2YXIgdmlzaWJsZSA9IF9yZWYudmlzaWJsZTsKICByZXR1cm4gdmlzaWJsZSA/ICcnIDogJ2Rpc3BsYXk6IG5vbmU7JzsKfSk7CnZhciBTY3JvbGxQcm9ncmVzc0JhciA9IHN0eWxlZCgnZGl2JykoX3RlbXBsYXRlT2JqZWN0MigpLCBmdW5jdGlvbiAoX3JlZjIpIHsKICB2YXIgdGhlbWUgPSBfcmVmMi50aGVtZTsKICByZXR1cm4gcmdiKHRoZW1lLmNvbG9ycy5kYXJrWyJkZWZhdWx0Il0pOwp9KTsKdmFyIFNjcm9sbFByb2dyZXNzQmFyRmlsbCA9IHN0eWxlZCgnZGl2JykoX3RlbXBsYXRlT2JqZWN0MygpLCBmdW5jdGlvbiAoX3JlZjMpIHsKICB2YXIgdGhlbWUgPSBfcmVmMy50aGVtZTsKICByZXR1cm4gcmdiKHRoZW1lLmNvbG9ycy5wcmltYXJ5WyJkZWZhdWx0Il0pOwp9KTsKdmFyIFNjcm9sbENvbnRlbnQgPSBzdHlsZWQoJ2RpdicpKF90ZW1wbGF0ZU9iamVjdDQoKSk7CmV4cG9ydCB2YXIgU2Nyb2xsUHJvZ3Jlc3MgPSBmdW5jdGlvbiBTY3JvbGxQcm9ncmVzcyhfcmVmNCkgewogIHZhciBzcGVlZCA9IF9yZWY0LnNwZWVkLAogICAgICBjaGlsZHJlbiA9IF9yZWY0LmNoaWxkcmVuLAogICAgICBvdGhlcnMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZjQsIFsic3BlZWQiLCAiY2hpbGRyZW4iXSk7CgogIHZhciBsZW5ndGggPSBjaGlsZHJlbi5sZW5ndGg7CiAgdmFyIGZhY3RvciA9IHNwZWVkIHx8IDE7CiAgcmV0dXJuIGpzeChPdmVyU2Nyb2xsLCBfZXh0ZW5kcyh7CiAgICBjbGFzc05hbWU6ICJzY3JvbGwtcHJvZ3Jlc3MiLAogICAgc2xpZGVzOiBsZW5ndGgsCiAgICBmYWN0b3I6IGZhY3RvcgogIH0sIG90aGVycywgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogMzcKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgZnVuY3Rpb24gKHBhZ2UsIHByb2dyZXNzKSB7CiAgICB2YXIgYmVmb3JlU3RhcnQgPSBwYWdlID09PSAwICYmIHByb2dyZXNzID09PSAwOwogICAgdmFyIGFmdGVyRW5kID0gcGFnZSArIDEgPT09IGxlbmd0aCAmJiBwcm9ncmVzcyA+PSAxMDA7CiAgICB2YXIgaGlkZGVuID0gYmVmb3JlU3RhcnQgfHwgYWZ0ZXJFbmQ7CiAgICByZXR1cm4ganN4KCJkaXYiLCB7CiAgICAgIF9fc291cmNlOiB7CiAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgICBsaW5lTnVtYmVyOiA0MwogICAgICB9LAogICAgICBfX3NlbGY6IHRoaXMKICAgIH0sIGpzeChTY3JvbGxDb250ZW50LCB7CiAgICAgIF9fc291cmNlOiB7CiAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgICBsaW5lTnVtYmVyOiA0NAogICAgICB9LAogICAgICBfX3NlbGY6IHRoaXMKICAgIH0sIGNoaWxkcmVuW3BhZ2VdKSwganN4KFNjcm9sbFByb2dyZXNzQmFyQ29udGFpbmVyLCB7CiAgICAgIHZpc2libGU6ICFoaWRkZW4sCiAgICAgIF9fc291cmNlOiB7CiAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgICBsaW5lTnVtYmVyOiA0NwogICAgICB9LAogICAgICBfX3NlbGY6IHRoaXMKICAgIH0sIGpzeChTY3JvbGxQcm9ncmVzc0JhciwgewogICAgICBfX3NvdXJjZTogewogICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgbGluZU51bWJlcjogNDgKICAgICAgfSwKICAgICAgX19zZWxmOiB0aGlzCiAgICB9LCBqc3goU2Nyb2xsUHJvZ3Jlc3NCYXJGaWxsLCB7CiAgICAgIHN0eWxlOiB7CiAgICAgICAgd2lkdGg6ICIiLmNvbmNhdChwcm9ncmVzcywgIiUiKQogICAgICB9LAogICAgICBfX3NvdXJjZTogewogICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgbGluZU51bWJlcjogNDkKICAgICAgfSwKICAgICAgX19zZWxmOiB0aGlzCiAgICB9KSkpKTsKICB9KTsKfTsKCmlmICh0eXBlb2YgU2Nyb2xsUHJvZ3Jlc3MgIT09ICd1bmRlZmluZWQnICYmIFNjcm9sbFByb2dyZXNzICYmIFNjcm9sbFByb2dyZXNzID09PSBPYmplY3QoU2Nyb2xsUHJvZ3Jlc3MpICYmIE9iamVjdC5pc0V4dGVuc2libGUoU2Nyb2xsUHJvZ3Jlc3MpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFNjcm9sbFByb2dyZXNzLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiU2Nyb2xsUHJvZ3Jlc3MiLAogICAgICBmaWxlbmFtZTogInNyYy9jb21wb25lbnRzL2xheW91dC9zY3JvbGwtcHJvZ3Jlc3MuanN4IgogICAgfQogIH0pOwp9CgpTY3JvbGxQcm9ncmVzcy5wcm9wVHlwZXMgPSB7CiAgc3BlZWQ6IFByb3BUeXBlcy5udW1iZXIKfTsKdmFyIF9kZWZhdWx0ID0gU2Nyb2xsUHJvZ3Jlc3M7CmV4cG9ydCBkZWZhdWx0IF9kZWZhdWx0OwoKaWYgKHR5cGVvZiBTY3JvbGxQcm9ncmVzcyAhPT0gJ3VuZGVmaW5lZCcgJiYgU2Nyb2xsUHJvZ3Jlc3MgJiYgU2Nyb2xsUHJvZ3Jlc3MgPT09IE9iamVjdChTY3JvbGxQcm9ncmVzcykgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShTY3JvbGxQcm9ncmVzcykpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoU2Nyb2xsUHJvZ3Jlc3MsICdfX2ZpbGVtZXRhJywgewogICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSwKICAgIHZhbHVlOiB7CiAgICAgIG5hbWU6ICJTY3JvbGxQcm9ncmVzcyIsCiAgICAgIGZpbGVuYW1lOiAic3JjL2NvbXBvbmVudHMvbGF5b3V0L3Njcm9sbC1wcm9ncmVzcy5qc3giCiAgICB9CiAgfSk7Cn0KCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoU2Nyb2xsUHJvZ3Jlc3NCYXJDb250YWluZXIsICJTY3JvbGxQcm9ncmVzc0JhckNvbnRhaW5lciIsICIvc2l0ZS9zcmMvY29tcG9uZW50cy9sYXlvdXQvc2Nyb2xsLXByb2dyZXNzLmpzeCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKFNjcm9sbFByb2dyZXNzQmFyLCAiU2Nyb2xsUHJvZ3Jlc3NCYXIiLCAiL3NpdGUvc3JjL2NvbXBvbmVudHMvbGF5b3V0L3Njcm9sbC1wcm9ncmVzcy5qc3giKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihTY3JvbGxQcm9ncmVzc0JhckZpbGwsICJTY3JvbGxQcm9ncmVzc0JhckZpbGwiLCAiL3NpdGUvc3JjL2NvbXBvbmVudHMvbGF5b3V0L3Njcm9sbC1wcm9ncmVzcy5qc3giKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihTY3JvbGxDb250ZW50LCAiU2Nyb2xsQ29udGVudCIsICIvc2l0ZS9zcmMvY29tcG9uZW50cy9sYXlvdXQvc2Nyb2xsLXByb2dyZXNzLmpzeCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKFNjcm9sbFByb2dyZXNzLCAiU2Nyb2xsUHJvZ3Jlc3MiLCAiL3NpdGUvc3JjL2NvbXBvbmVudHMvbGF5b3V0L3Njcm9sbC1wcm9ncmVzcy5qc3giKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihfZGVmYXVsdCwgImRlZmF1bHQiLCAiL3NpdGUvc3JjL2NvbXBvbmVudHMvbGF5b3V0L3Njcm9sbC1wcm9ncmVzcy5qc3giKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkubGVhdmVNb2R1bGU7CiAgbGVhdmVNb2R1bGUgJiYgbGVhdmVNb2R1bGUobW9kdWxlKTsKfSkoKTs="},{"version":3,"sources":["/site/src/components/layout/scroll-progress.jsx"],"names":["styled","jsx","React","PropTypes","OverScroll","rgb","ScrollProgressBarContainer","visible","ScrollProgressBar","theme","colors","dark","ScrollProgressBarFill","primary","ScrollContent","ScrollProgress","speed","children","others","length","factor","page","progress","beforeStart","afterEnd","hidden","width","propTypes","number"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,MAAP,MAAmB,iBAAnB;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,SAASC,GAAT,QAAoB,oBAApB;AAEA,IAAMC,0BAA0B,GAAGN,MAAM,CAAC,KAAD,CAAT,oBAI5B;AAAA,MAAGO,OAAH,QAAGA,OAAH;AAAA,SAAiBA,OAAO,GAAG,EAAH,GAAQ,gBAAhC;AAAA,CAJ4B,CAAhC;AAMA,IAAMC,iBAAiB,GAAGR,MAAM,CAAC,KAAD,CAAT,qBACP;AAAA,MAAGS,KAAH,SAAGA,KAAH;AAAA,SAAeJ,GAAG,CAACI,KAAK,CAACC,MAAN,CAAaC,IAAb,WAAD,CAAlB;AAAA,CADO,CAAvB;AAIA,IAAMC,qBAAqB,GAAGZ,MAAM,CAAC,KAAD,CAAT,qBACX;AAAA,MAAGS,KAAH,SAAGA,KAAH;AAAA,SAAeJ,GAAG,CAACI,KAAK,CAACC,MAAN,CAAaG,OAAb,WAAD,CAAlB;AAAA,CADW,CAA3B;AAIA,IAAMC,aAAa,GAAGd,MAAM,CAAC,KAAD,CAAT,oBAAnB;AAUA,OAAO,IAAMe,cAAc,GAAG,SAAjBA,cAAiB,QAAoC;AAAA,MAAjCC,KAAiC,SAAjCA,KAAiC;AAAA,MAA1BC,QAA0B,SAA1BA,QAA0B;AAAA,MAAbC,MAAa;;AAChE,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB;AACA,MAAMC,MAAM,GAAGJ,KAAK,IAAI,CAAxB;AACA,SACE,IAAC,UAAD;AAAY,IAAA,SAAS,EAAC,iBAAtB;AAAwC,IAAA,MAAM,EAAEG,MAAhD;AAAwD,IAAA,MAAM,EAAEC;AAAhE,KAA4EF,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACG,UAACG,IAAD,EAAOC,QAAP,EAAoB;AACnB,QAAMC,WAAW,GAAGF,IAAI,KAAK,CAAT,IAAcC,QAAQ,KAAK,CAA/C;AACA,QAAME,QAAQ,GAAIH,IAAI,GAAG,CAAR,KAAeF,MAAf,IAAyBG,QAAQ,IAAI,GAAtD;AACA,QAAMG,MAAM,GAAGF,WAAW,IAAIC,QAA9B;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,IAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,QAAQ,CAACI,IAAD,CADX,CADF,EAIE,IAAC,0BAAD;AAA4B,MAAA,OAAO,EAAE,CAACI,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,IAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,IAAC,qBAAD;AAAuB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,YAAKJ,QAAL;AAAP,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAJF,CADF;AAYD,GAjBH,CADF;AAqBD,CAxBM;;;;;;;;;;;;;AA0BPP,cAAc,CAACY,SAAf,GAA2B;AACzBX,EAAAA,KAAK,EAAEb,SAAS,CAACyB;AADQ,CAA3B;eAIeb,c;AAAf;;;;;;;;;;;;;;;;;;;;;;0BAtDMT,0B;0BAMAE,iB;0BAIAI,qB;0BAIAE,a;0BAUOC,c","sourcesContent":["/** @jsx jsx */\nimport styled from '@emotion/styled'\nimport { jsx } from '@emotion/core'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport OverScroll from 'gatsby-over-scroll'\nimport { rgb } from '../../themes/utils'\n\nconst ScrollProgressBarContainer = styled('div')`\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  ${({ visible }) => visible ? '' : 'display: none;'};\n`\nconst ScrollProgressBar = styled('div')`\n  background: ${({ theme }) => rgb(theme.colors.dark.default)};\n  height: 10px;\n`\nconst ScrollProgressBarFill = styled('div')`\n  background: ${({ theme }) => rgb(theme.colors.primary.default)};\n  height: 10px;\n`\nconst ScrollContent = styled('div')`\n  > * {\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n  }\n`\n\nexport const ScrollProgress = ({ speed, children, ...others }) => {\n  const length = children.length\n  const factor = speed || 1\n  return (\n    <OverScroll className=\"scroll-progress\" slides={length} factor={factor} {...others}>\n      {(page, progress) => {\n        const beforeStart = page === 0 && progress === 0\n        const afterEnd = (page + 1) === length && progress >= 100\n        const hidden = beforeStart || afterEnd\n        return (\n          <div>\n            <ScrollContent>\n              {children[page]}\n            </ScrollContent>\n            <ScrollProgressBarContainer visible={!hidden}>\n              <ScrollProgressBar>\n                <ScrollProgressBarFill style={{ width: `${progress}%` }}/>\n              </ScrollProgressBar>\n            </ScrollProgressBarContainer>\n          </div>\n        )\n      }}\n    </OverScroll>\n  )\n}\n\nScrollProgress.propTypes = {\n  speed: PropTypes.number,\n}\n\nexport default ScrollProgress\n"]}]}