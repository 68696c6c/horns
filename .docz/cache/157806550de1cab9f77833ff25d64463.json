{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/utils/layout.js","dependencies":[{"path":"/site/src/utils/layout.js","mtime":1573330658000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/site/src/utils/layout.js"],"names":["PropTypes","css","textAlignOptions","flexOptionsX","flexOptionsY","Flex","x","y","alignItems","justifyContent","containerPropTypes","contained","bool","containerDefaultProps","ContainerSplit","theme","container","grid","getContainer","gutter","Container","fluid","Padded","spacing","padded","compact","padding","getSpacing","paddingX"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types'\nimport { css } from '@emotion/core'\n\nexport const textAlignOptions = [\n  'left',\n  'right',\n  'center',\n  'justify',\n  'initial',\n  'inherit',\n]\n\nexport const flexOptionsX = ['left', 'center', 'right']\nexport const flexOptionsY = ['top', 'center', 'bottom']\n\nexport const Flex = ({ x, y }) => {\n  let alignItems\n  let justifyContent\n  switch (x) {\n    case 'left':\n      justifyContent = 'flex-start'\n      break\n    case 'right':\n      justifyContent = 'flex-end'\n      break\n    default:\n      justifyContent = 'center'\n  }\n  switch (y) {\n    case 'top':\n      alignItems = 'flex-start'\n      break\n    case 'bottom':\n      alignItems = 'flex-end'\n      break\n    default:\n      alignItems = 'center'\n  }\n  return css`\n    display: flex;\n    align-items: ${alignItems};\n    justify-content: ${justifyContent};\n  `\n}\n\nexport const containerPropTypes = () => ({\n  contained: PropTypes.bool,\n})\n\nexport const containerDefaultProps = (contained = true) => ({\n  contained,\n})\n\nexport const ContainerSplit = ({ theme, contained }) => {\n  if (!contained) {\n    return ''\n  }\n  const container = theme.grid.getContainer()\n  const gutter = `calc(((100vw - ${container}) / 2))`\n  return css`\n    > :nth-child(odd) {\n      padding-left: ${gutter};\n      padding-right: 0;\n    }\n    > :nth-child(even) {\n      padding-left: 0;\n      padding-right: ${gutter};\n    }\n  `\n}\n\nexport const Container = ({ theme, contained, fluid }) => {\n  if (!contained || fluid) {\n    return ''\n  }\n  const container = theme.grid.getContainer()\n  const gutter = `calc(((100vw - ${container}) / 2))`\n  return css`\n    padding-left: ${gutter};\n    padding-right: ${gutter};\n  `\n}\n\nexport const Padded = ({\n  theme,\n  contained,\n  spacing,\n  padded = '*',\n  compact = '*',\n}) => {\n  if ((padded === '*' && compact) || (compact === '*' && !padded)) {\n    return ''\n  }\n  const padding = theme.spacing.getSpacing(spacing)\n  const paddingX = contained\n    ? ''\n    : css`\n        padding-left: ${padding};\n        padding-right: ${padding};\n      `\n  return css`\n    padding-top: ${padding};\n    padding-bottom: ${padding};\n    ${paddingX}\n  `\n}\n"]}]}