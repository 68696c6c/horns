{"remainingRequest":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js??ref--5-1!/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/site/node_modules/source-map-loader/index.js!/site/src/components/forms/inputs/input.jsx","dependencies":[{"path":"/site/src/components/forms/inputs/input.jsx","mtime":1573330658000},{"path":"/site/node_modules/docz-core/node_modules/cache-loader/dist/cjs.js","mtime":1573331449000},{"path":"/site/node_modules/docz-core/node_modules/thread-loader/dist/cjs.js","mtime":1573331450000},{"path":"/site/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1573331449000},{"path":"/site/node_modules/source-map-loader/index.js","mtime":1573331450000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20gIi9zaXRlL25vZGVfbW9kdWxlcy9iYWJlbC1wcmVzZXQtcmVhY3QtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjsKaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyBmcm9tICIvc2l0ZS9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXMiOwppbXBvcnQgX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbCBmcm9tICIvc2l0ZS9ub2RlX21vZHVsZXMvYmFiZWwtcHJlc2V0LXJlYWN0LWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdGFnZ2VkVGVtcGxhdGVMaXRlcmFsIjsKdmFyIF9qc3hGaWxlTmFtZSA9ICIvc2l0ZS9zcmMvY29tcG9uZW50cy9mb3Jtcy9pbnB1dHMvaW5wdXQuanN4IjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGVudGVyTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZW50ZXJNb2R1bGU7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCmZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDIoKSB7CiAgdmFyIGRhdGEgPSBfdGFnZ2VkVGVtcGxhdGVMaXRlcmFsKFsiXG4gICIsICJcbiJdKTsKCiAgX3RlbXBsYXRlT2JqZWN0MiA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdDIoKSB7CiAgICByZXR1cm4gZGF0YTsKICB9OwoKICByZXR1cm4gZGF0YTsKfQoKZnVuY3Rpb24gX3RlbXBsYXRlT2JqZWN0KCkgewogIHZhciBkYXRhID0gX3RhZ2dlZFRlbXBsYXRlTGl0ZXJhbChbIlxuICAiLCAiXG4iXSk7CgogIF90ZW1wbGF0ZU9iamVjdCA9IGZ1bmN0aW9uIF90ZW1wbGF0ZU9iamVjdCgpIHsKICAgIHJldHVybiBkYXRhOwogIH07CgogIHJldHVybiBkYXRhOwp9Cgp2YXIgX19zaWduYXR1cmVfXyA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbFsiZGVmYXVsdCJdLnNpZ25hdHVyZSA6IGZ1bmN0aW9uIChhKSB7CiAgcmV0dXJuIGE7Cn07CgovKiogQGpzeCBqc3ggKi8KCi8qIGVzbGludC1kaXNhYmxlIG5vLXBhcmFtLXJlYXNzaWduICovCmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJzsKaW1wb3J0IHsganN4IH0gZnJvbSAnQGVtb3Rpb24vY29yZSc7CmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7CmltcG9ydCBNYXNrZWRJbnB1dCBmcm9tICdyZWFjdC10ZXh0LW1hc2snOwppbXBvcnQgY3JlYXRlTnVtYmVyTWFzayBmcm9tICd0ZXh0LW1hc2stYWRkb25zL2Rpc3QvY3JlYXRlTnVtYmVyTWFzayc7CmltcG9ydCB1dWlkIGZyb20gJ3V1aWQvdjQnOwppbXBvcnQgTGFiZWwgZnJvbSAnLi4vbGFiZWwnOwppbXBvcnQgSW5wdXRNZXNzYWdlIGZyb20gJy4uL2lucHV0LW1lc3NhZ2UnOwppbXBvcnQgYmFzZUlucHV0IGZyb20gJy4vYmFzZSc7CmltcG9ydCB7IEVSUk9SX0NMQVNTIH0gZnJvbSAnLi4vdXRpbHMnOwp2YXIgU3R5bGVkSW5wdXQgPSBzdHlsZWQoJ2lucHV0JykoX3RlbXBsYXRlT2JqZWN0KCksIGZ1bmN0aW9uIChfcmVmKSB7CiAgdmFyIHRoZW1lID0gX3JlZi50aGVtZTsKICByZXR1cm4gYmFzZUlucHV0KHRoZW1lKTsKfSk7CnZhciBTdHlsZWRNYXNrID0gc3R5bGVkKE1hc2tlZElucHV0KShfdGVtcGxhdGVPYmplY3QyKCksIGZ1bmN0aW9uIChfcmVmMikgewogIHZhciB0aGVtZSA9IF9yZWYyLnRoZW1lOwogIHJldHVybiBiYXNlSW5wdXQodGhlbWUpOwp9KTsKCnZhciBJbnB1dCA9IGZ1bmN0aW9uIElucHV0KF9yZWYzKSB7CiAgdmFyIHR5cGUgPSBfcmVmMy50eXBlLAogICAgICBuYW1lID0gX3JlZjMubmFtZSwKICAgICAgaWQgPSBfcmVmMy5pZCwKICAgICAgbGFiZWwgPSBfcmVmMy5sYWJlbCwKICAgICAgY3VycmVuY3kgPSBfcmVmMy5jdXJyZW5jeSwKICAgICAgcGxhY2Vob2xkZXIgPSBfcmVmMy5wbGFjZWhvbGRlciwKICAgICAgcmVxdWlyZWQgPSBfcmVmMy5yZXF1aXJlZCwKICAgICAgaGFzRXJyb3IgPSBfcmVmMy5oYXNFcnJvciwKICAgICAgZXJyb3JNZXNzYWdlID0gX3JlZjMuZXJyb3JNZXNzYWdlLAogICAgICBjbGFzc05hbWUgPSBfcmVmMy5jbGFzc05hbWUsCiAgICAgIG90aGVycyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfcmVmMywgWyJ0eXBlIiwgIm5hbWUiLCAiaWQiLCAibGFiZWwiLCAiY3VycmVuY3kiLCAicGxhY2Vob2xkZXIiLCAicmVxdWlyZWQiLCAiaGFzRXJyb3IiLCAiZXJyb3JNZXNzYWdlIiwgImNsYXNzTmFtZSJdKTsKCiAgdmFyIGVycm9yQ2xhc3MgPSBoYXNFcnJvciA/IEVSUk9SX0NMQVNTIDogJyc7CiAgdmFyIGlkVmFsdWUgPSBpZCA9PT0gJycgPyB1dWlkKCkgOiBpZDsKICB2YXIgVGFnOwoKICBzd2l0Y2ggKHR5cGUpIHsKICAgIGNhc2UgJ3RlbCc6CiAgICAgIFRhZyA9IFN0eWxlZE1hc2s7CiAgICAgIG90aGVycy5tYXNrID0gWy9cZC8sIC9cZC8sIC9cZC8sICcuJywgL1xkLywgL1xkLywgL1xkLywgJy4nLCAvXGQvLCAvXGQvLCAvXGQvLCAvXGQvXTsKICAgICAgb3RoZXJzLnBsYWNlaG9sZGVyQ2hhciA9ICdfJzsKICAgICAgYnJlYWs7CgogICAgY2FzZSAnY3VycmVuY3knOgogICAgICBUYWcgPSBTdHlsZWRNYXNrOwogICAgICBvdGhlcnMubWFzayA9IGNyZWF0ZU51bWJlck1hc2soewogICAgICAgIHByZWZpeDogY3VycmVuY3ksCiAgICAgICAgYWxsb3dEZWNpbWFsOiB0cnVlCiAgICAgIH0pOwogICAgICB0eXBlID0gJ3RleHQnOwogICAgICBicmVhazsKCiAgICBjYXNlICdwZXJjZW50YWdlJzoKICAgICAgVGFnID0gU3R5bGVkTWFzazsKICAgICAgb3RoZXJzLm1hc2sgPSBjcmVhdGVOdW1iZXJNYXNrKHsKICAgICAgICBwcmVmaXg6ICcnLAogICAgICAgIHN1ZmZpeDogJyUnLAogICAgICAgIGFsbG93RGVjaW1hbDogdHJ1ZQogICAgICB9KTsKICAgICAgdHlwZSA9ICd0ZXh0JzsKICAgICAgYnJlYWs7CgogICAgZGVmYXVsdDoKICAgICAgVGFnID0gU3R5bGVkSW5wdXQ7CiAgfQoKICByZXR1cm4ganN4KFJlYWN0LkZyYWdtZW50LCB7CiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA1NAogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIGxhYmVsICYmIGpzeChMYWJlbCwgewogICAgaHRtbEZvcjogaWRWYWx1ZSwKICAgIHJlcXVpcmVkOiByZXF1aXJlZCwKICAgIGhhc0Vycm9yOiBoYXNFcnJvciwKICAgIF9fc291cmNlOiB7CiAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgIGxpbmVOdW1iZXI6IDU1CiAgICB9LAogICAgX19zZWxmOiB0aGlzCiAgfSwgbGFiZWwpLCBqc3goVGFnLCBfZXh0ZW5kcyh7CiAgICB0eXBlOiB0eXBlLAogICAgbmFtZTogbmFtZSwKICAgIGlkOiBpZFZhbHVlLAogICAgY2xhc3NOYW1lOiAiIi5jb25jYXQoY2xhc3NOYW1lLCAiIGlucHV0ICIpLmNvbmNhdChlcnJvckNsYXNzKSwKICAgIHBsYWNlaG9sZGVyOiBwbGFjZWhvbGRlciwKICAgIHJlcXVpcmVkOiByZXF1aXJlZCA/ICdyZXF1aXJlZCcgOiAnJwogIH0sIG90aGVycywgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNTYKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSksIGVycm9yTWVzc2FnZSAmJiBqc3goSW5wdXRNZXNzYWdlLCB7CiAgICBodG1sRm9yOiBpZFZhbHVlLAogICAgdmFyaWFudDogImRhbmdlciIsCiAgICBfX3NvdXJjZTogewogICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLAogICAgICBsaW5lTnVtYmVyOiA2NQogICAgfSwKICAgIF9fc2VsZjogdGhpcwogIH0sIGVycm9yTWVzc2FnZSkpOwp9OwoKSW5wdXQucHJvcFR5cGVzID0gewogIHR5cGU6IFByb3BUeXBlcy5vbmVPZihbJ2NvbG9yJywgJ2RhdGUnLCAnZGF0ZXRpbWUtbG9jYWwnLCAnZW1haWwnLCAnbW9udGgnLCAnbnVtYmVyJywgJ3Bhc3N3b3JkJywgJ3JhbmdlJywgJ3NlYXJjaCcsICd0ZWwnLCAndGV4dCcsICd0aW1lJywgJ3VybCcsICd3ZWVrJywgJ2N1cnJlbmN5JywgJ3BlcmNlbnRhZ2UnXSksCiAgbmFtZTogUHJvcFR5cGVzLnN0cmluZywKICBpZDogUHJvcFR5cGVzLnN0cmluZywKICBsYWJlbDogUHJvcFR5cGVzLnN0cmluZywKICBjdXJyZW5jeTogUHJvcFR5cGVzLnN0cmluZywKICBwbGFjZWhvbGRlcjogUHJvcFR5cGVzLnN0cmluZywKICByZXF1aXJlZDogUHJvcFR5cGVzLmJvb2wsCiAgaGFzRXJyb3I6IFByb3BUeXBlcy5ib29sLAogIGVycm9yTWVzc2FnZTogUHJvcFR5cGVzLnN0cmluZywKICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcKfTsKSW5wdXQuZGVmYXVsdFByb3BzID0gewogIHR5cGU6ICd0ZXh0JywKICBpZDogJycsCiAgbGFiZWw6ICcnLAogIGN1cnJlbmN5OiAnJCcsCiAgcGxhY2Vob2xkZXI6ICcnLAogIHJlcXVpcmVkOiBmYWxzZSwKICBoYXNFcnJvcjogZmFsc2UsCiAgZXJyb3JNZXNzYWdlOiAnJywKICBjbGFzc05hbWU6ICcnCn07CnZhciBfZGVmYXVsdCA9IElucHV0OwpleHBvcnQgZGVmYXVsdCBfZGVmYXVsdDsKCmlmICh0eXBlb2YgSW5wdXQgIT09ICd1bmRlZmluZWQnICYmIElucHV0ICYmIElucHV0ID09PSBPYmplY3QoSW5wdXQpICYmIE9iamVjdC5pc0V4dGVuc2libGUoSW5wdXQpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KElucHV0LCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiSW5wdXQiLAogICAgICBmaWxlbmFtZTogInNyYy9jb21wb25lbnRzL2Zvcm1zL2lucHV0cy9pbnB1dC5qc3giCiAgICB9CiAgfSk7Cn0KCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIHJlYWN0SG90TG9hZGVyID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZGVmYXVsdDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoU3R5bGVkSW5wdXQsICJTdHlsZWRJbnB1dCIsICIvc2l0ZS9zcmMvY29tcG9uZW50cy9mb3Jtcy9pbnB1dHMvaW5wdXQuanN4Iik7CiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoU3R5bGVkTWFzaywgIlN0eWxlZE1hc2siLCAiL3NpdGUvc3JjL2NvbXBvbmVudHMvZm9ybXMvaW5wdXRzL2lucHV0LmpzeCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKElucHV0LCAiSW5wdXQiLCAiL3NpdGUvc3JjL2NvbXBvbmVudHMvZm9ybXMvaW5wdXRzL2lucHV0LmpzeCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKF9kZWZhdWx0LCAiZGVmYXVsdCIsICIvc2l0ZS9zcmMvY29tcG9uZW50cy9mb3Jtcy9pbnB1dHMvaW5wdXQuanN4Iik7Cn0pKCk7Cgo7CgooZnVuY3Rpb24gKCkgewogIHZhciBsZWF2ZU1vZHVsZSA9ICh0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwgOiByZXF1aXJlKCdyZWFjdC1ob3QtbG9hZGVyJykpLmxlYXZlTW9kdWxlOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["/site/src/components/forms/inputs/input.jsx"],"names":["styled","jsx","React","PropTypes","MaskedInput","createNumberMask","uuid","Label","InputMessage","baseInput","ERROR_CLASS","StyledInput","theme","StyledMask","Input","type","name","id","label","currency","placeholder","required","hasError","errorMessage","className","others","errorClass","idValue","Tag","mask","placeholderChar","prefix","allowDecimal","suffix","propTypes","oneOf","string","bool","defaultProps"],"mappings":"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","sourcesContent":["/** @jsx jsx */\n/* eslint-disable no-param-reassign */\nimport styled from '@emotion/styled'\nimport { jsx } from '@emotion/core'\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport MaskedInput from 'react-text-mask'\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\nimport uuid from 'uuid/v4'\n\nimport Label from '../label'\nimport InputMessage from '../input-message'\nimport baseInput from './base'\nimport { ERROR_CLASS } from '../utils'\n\nconst StyledInput = styled('input')`\n  ${({ theme }) => baseInput(theme)}\n`\nconst StyledMask = styled(MaskedInput)`\n  ${({ theme }) => baseInput(theme)}\n`\n\nconst Input = ({ type, name, id, label, currency, placeholder, required, hasError, errorMessage, className, ...others }) => {\n  const errorClass = hasError ? ERROR_CLASS : ''\n  const idValue = id === '' ? uuid() : id\n  let Tag\n  switch (type) {\n    case 'tel':\n      Tag = StyledMask\n      others.mask = [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, /\\d/]\n      others.placeholderChar = '_'\n      break\n    case 'currency':\n      Tag = StyledMask\n      others.mask = createNumberMask({\n        prefix: currency,\n        allowDecimal: true,\n      })\n      type = 'text'\n      break\n    case 'percentage':\n      Tag = StyledMask\n      others.mask = createNumberMask({\n        prefix: '',\n        suffix: '%',\n        allowDecimal: true,\n      })\n      type = 'text'\n      break\n    default:\n      Tag = StyledInput\n  }\n  return (\n    <React.Fragment>\n      {label && <Label htmlFor={idValue} required={required} hasError={hasError}>{label}</Label>}\n      <Tag\n        type={type}\n        name={name}\n        id={idValue}\n        className={`${className} input ${errorClass}`}\n        placeholder={placeholder}\n        required={required ? 'required' : ''}\n        {...others}\n      />\n      {errorMessage && <InputMessage htmlFor={idValue} variant=\"danger\">{errorMessage}</InputMessage>}\n    </React.Fragment>\n  )\n}\n\nInput.propTypes = {\n  type: PropTypes.oneOf([\n    'color',\n    'date',\n    'datetime-local',\n    'email',\n    'month',\n    'number',\n    'password',\n    'range',\n    'search',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n    'currency',\n    'percentage',\n  ]),\n  name: PropTypes.string,\n  id: PropTypes.string,\n  label: PropTypes.string,\n  currency: PropTypes.string,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  hasError: PropTypes.bool,\n  errorMessage: PropTypes.string,\n  className: PropTypes.string,\n}\n\nInput.defaultProps = {\n  type: 'text',\n  id: '',\n  label: '',\n  currency: '$',\n  placeholder: '',\n  required: false,\n  hasError: false,\n  errorMessage: '',\n  className: '',\n}\n\nexport default Input\n"]}]}